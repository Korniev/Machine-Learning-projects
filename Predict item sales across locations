{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":77807,"databundleVersionId":8765512,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-01T19:06:59.632917Z","iopub.execute_input":"2024-07-01T19:06:59.633784Z","iopub.status.idle":"2024-07-01T19:06:59.646237Z","shell.execute_reply.started":"2024-07-01T19:06:59.633743Z","shell.execute_reply":"2024-07-01T19:06:59.645029Z"},"trusted":true},"execution_count":191,"outputs":[{"name":"stdout","text":"/kaggle/input/ml-competition-2024-for-ukrainians/sample_submission.csv\n/kaggle/input/ml-competition-2024-for-ukrainians/train.csv\n/kaggle/input/ml-competition-2024-for-ukrainians/test.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Explore the data**","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport os","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:07:02.300442Z","iopub.execute_input":"2024-07-01T19:07:02.301405Z","iopub.status.idle":"2024-07-01T19:07:02.306000Z","shell.execute_reply.started":"2024-07-01T19:07:02.301365Z","shell.execute_reply":"2024-07-01T19:07:02.304854Z"},"trusted":true},"execution_count":192,"outputs":[]},{"cell_type":"code","source":"train_data = pd.read_csv(\"/kaggle/input/ml-competition-2024-for-ukrainians/train.csv\")\ntrain_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:12:35.644781Z","iopub.execute_input":"2024-07-01T19:12:35.645258Z","iopub.status.idle":"2024-07-01T19:12:36.774486Z","shell.execute_reply.started":"2024-07-01T19:12:35.645222Z","shell.execute_reply":"2024-07-01T19:12:36.773037Z"},"trusted":true},"execution_count":197,"outputs":[{"execution_count":197,"output_type":"execute_result","data":{"text/plain":"   id Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n0   0           NCU06        17.60          Low Fat         0.024795   \n1   1           FDY26        20.50          Regular         0.102226   \n2   2           FDK21        18.35          Low Fat         0.092238   \n3   3           NCN05        12.15          Low Fat         0.043942   \n4   4           FDA47        10.50          Regular         0.042967   \n\n            Item_Type  Item_MRP Outlet_Identifier  Outlet_Establishment_Year  \\\n0           Household  231.1010            OUT017                       2007   \n1               Dairy  212.6244            OUT017                       2007   \n2         Snack Foods  250.1092            OUT013                       1987   \n3  Health and Hygiene  182.2950            OUT049                       1999   \n4        Baking Goods  162.4210            OUT035                       2004   \n\n  Outlet_Size Outlet_Location_Type        Outlet_Type  Item_Outlet_Sales  \n0      Medium               Tier 2  Supermarket Type1         1760.43266  \n1      Medium               Tier 2  Supermarket Type1          101.20160  \n2        High               Tier 3  Supermarket Type1         2042.61550  \n3      Medium               Tier 1  Supermarket Type1         3103.95960  \n4       Small               Tier 2  Supermarket Type1          442.75700  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Item_Identifier</th>\n      <th>Item_Weight</th>\n      <th>Item_Fat_Content</th>\n      <th>Item_Visibility</th>\n      <th>Item_Type</th>\n      <th>Item_MRP</th>\n      <th>Outlet_Identifier</th>\n      <th>Outlet_Establishment_Year</th>\n      <th>Outlet_Size</th>\n      <th>Outlet_Location_Type</th>\n      <th>Outlet_Type</th>\n      <th>Item_Outlet_Sales</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NCU06</td>\n      <td>17.60</td>\n      <td>Low Fat</td>\n      <td>0.024795</td>\n      <td>Household</td>\n      <td>231.1010</td>\n      <td>OUT017</td>\n      <td>2007</td>\n      <td>Medium</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>1760.43266</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>FDY26</td>\n      <td>20.50</td>\n      <td>Regular</td>\n      <td>0.102226</td>\n      <td>Dairy</td>\n      <td>212.6244</td>\n      <td>OUT017</td>\n      <td>2007</td>\n      <td>Medium</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>101.20160</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>FDK21</td>\n      <td>18.35</td>\n      <td>Low Fat</td>\n      <td>0.092238</td>\n      <td>Snack Foods</td>\n      <td>250.1092</td>\n      <td>OUT013</td>\n      <td>1987</td>\n      <td>High</td>\n      <td>Tier 3</td>\n      <td>Supermarket Type1</td>\n      <td>2042.61550</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>NCN05</td>\n      <td>12.15</td>\n      <td>Low Fat</td>\n      <td>0.043942</td>\n      <td>Health and Hygiene</td>\n      <td>182.2950</td>\n      <td>OUT049</td>\n      <td>1999</td>\n      <td>Medium</td>\n      <td>Tier 1</td>\n      <td>Supermarket Type1</td>\n      <td>3103.95960</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>FDA47</td>\n      <td>10.50</td>\n      <td>Regular</td>\n      <td>0.042967</td>\n      <td>Baking Goods</td>\n      <td>162.4210</td>\n      <td>OUT035</td>\n      <td>2004</td>\n      <td>Small</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>442.75700</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_data.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-01T18:36:30.547116Z","iopub.execute_input":"2024-07-01T18:36:30.547554Z","iopub.status.idle":"2024-07-01T18:36:30.554534Z","shell.execute_reply.started":"2024-07-01T18:36:30.547521Z","shell.execute_reply":"2024-07-01T18:36:30.553490Z"},"trusted":true},"execution_count":163,"outputs":[{"execution_count":163,"output_type":"execute_result","data":{"text/plain":"(378428, 13)"},"metadata":{}}]},{"cell_type":"code","source":"test_data = pd.read_csv(\"/kaggle/input/ml-competition-2024-for-ukrainians/test.csv\")\ntest_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:12:40.913017Z","iopub.execute_input":"2024-07-01T19:12:40.913450Z","iopub.status.idle":"2024-07-01T19:12:41.472246Z","shell.execute_reply.started":"2024-07-01T19:12:40.913418Z","shell.execute_reply":"2024-07-01T19:12:41.470936Z"},"trusted":true},"execution_count":198,"outputs":[{"execution_count":198,"output_type":"execute_result","data":{"text/plain":"       id Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n0  378428           FDP45        15.70          Low Fat         0.074779   \n1  378429           FDY44        14.15          Regular         0.024821   \n2  378430           NCV29        11.80               LF         0.032813   \n3  378431           FDG53        10.00          Low Fat         0.087646   \n4  378432           NCB18        19.60          Low Fat         0.000000   \n\n               Item_Type  Item_MRP Outlet_Identifier  \\\n0            Snack Foods  256.1014            OUT049   \n1  Fruits and Vegetables  196.4110            OUT017   \n2     Health and Hygiene  177.6686            OUT013   \n3           Frozen Foods  138.6838            OUT017   \n4              Household   89.7514            OUT049   \n\n   Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n0                       1999      Medium               Tier 1   \n1                       2007      Medium               Tier 2   \n2                       1987        High               Tier 3   \n3                       2007      Medium               Tier 2   \n4                       1999      Medium               Tier 1   \n\n         Outlet_Type  \n0  Supermarket Type1  \n1  Supermarket Type1  \n2  Supermarket Type1  \n3  Supermarket Type1  \n4  Supermarket Type1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Item_Identifier</th>\n      <th>Item_Weight</th>\n      <th>Item_Fat_Content</th>\n      <th>Item_Visibility</th>\n      <th>Item_Type</th>\n      <th>Item_MRP</th>\n      <th>Outlet_Identifier</th>\n      <th>Outlet_Establishment_Year</th>\n      <th>Outlet_Size</th>\n      <th>Outlet_Location_Type</th>\n      <th>Outlet_Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>378428</td>\n      <td>FDP45</td>\n      <td>15.70</td>\n      <td>Low Fat</td>\n      <td>0.074779</td>\n      <td>Snack Foods</td>\n      <td>256.1014</td>\n      <td>OUT049</td>\n      <td>1999</td>\n      <td>Medium</td>\n      <td>Tier 1</td>\n      <td>Supermarket Type1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>378429</td>\n      <td>FDY44</td>\n      <td>14.15</td>\n      <td>Regular</td>\n      <td>0.024821</td>\n      <td>Fruits and Vegetables</td>\n      <td>196.4110</td>\n      <td>OUT017</td>\n      <td>2007</td>\n      <td>Medium</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>378430</td>\n      <td>NCV29</td>\n      <td>11.80</td>\n      <td>LF</td>\n      <td>0.032813</td>\n      <td>Health and Hygiene</td>\n      <td>177.6686</td>\n      <td>OUT013</td>\n      <td>1987</td>\n      <td>High</td>\n      <td>Tier 3</td>\n      <td>Supermarket Type1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>378431</td>\n      <td>FDG53</td>\n      <td>10.00</td>\n      <td>Low Fat</td>\n      <td>0.087646</td>\n      <td>Frozen Foods</td>\n      <td>138.6838</td>\n      <td>OUT017</td>\n      <td>2007</td>\n      <td>Medium</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>378432</td>\n      <td>NCB18</td>\n      <td>19.60</td>\n      <td>Low Fat</td>\n      <td>0.000000</td>\n      <td>Household</td>\n      <td>89.7514</td>\n      <td>OUT049</td>\n      <td>1999</td>\n      <td>Medium</td>\n      <td>Tier 1</td>\n      <td>Supermarket Type1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test_data.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:07:09.669914Z","iopub.execute_input":"2024-07-01T19:07:09.670361Z","iopub.status.idle":"2024-07-01T19:07:09.677645Z","shell.execute_reply.started":"2024-07-01T19:07:09.670328Z","shell.execute_reply":"2024-07-01T19:07:09.676453Z"},"trusted":true},"execution_count":195,"outputs":[{"execution_count":195,"output_type":"execute_result","data":{"text/plain":"(252286, 12)"},"metadata":{}}]},{"cell_type":"code","source":"combined_data = pd.concat([train_data, test_data], axis=0, ignore_index=True)\ncombined_data","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:12:44.796706Z","iopub.execute_input":"2024-07-01T19:12:44.797493Z","iopub.status.idle":"2024-07-01T19:12:44.849463Z","shell.execute_reply.started":"2024-07-01T19:12:44.797455Z","shell.execute_reply":"2024-07-01T19:12:44.848214Z"},"trusted":true},"execution_count":199,"outputs":[{"execution_count":199,"output_type":"execute_result","data":{"text/plain":"            id Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n0            0           NCU06       17.600          Low Fat         0.024795   \n1            1           FDY26       20.500          Regular         0.102226   \n2            2           FDK21       18.350          Low Fat         0.092238   \n3            3           NCN05       12.150          Low Fat         0.043942   \n4            4           FDA47       10.500          Regular         0.042967   \n...        ...             ...          ...              ...              ...   \n630709  630709           FDG28        9.285          Regular         0.064664   \n630710  630710           NCU05       10.100          Low Fat         0.058207   \n630711  630711           FDK09       15.200          Low Fat         0.039468   \n630712  630712           FDU14       17.750          Low Fat         0.041615   \n630713  630713           FDU47       12.100          Regular         0.056191   \n\n                 Item_Type  Item_MRP Outlet_Identifier  \\\n0                Household  231.1010            OUT017   \n1                    Dairy  212.6244            OUT017   \n2              Snack Foods  250.1092            OUT013   \n3       Health and Hygiene  182.2950            OUT049   \n4             Baking Goods  162.4210            OUT035   \n...                    ...       ...               ...   \n630709        Frozen Foods  121.2098            OUT010   \n630710  Health and Hygiene   82.6908            OUT045   \n630711         Snack Foods  126.2362            OUT045   \n630712               Dairy   98.7384            OUT045   \n630713              Breads  138.6838            OUT045   \n\n        Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n0                            2007      Medium               Tier 2   \n1                            2007      Medium               Tier 2   \n2                            1987        High               Tier 3   \n3                            1999      Medium               Tier 1   \n4                            2004       Small               Tier 2   \n...                           ...         ...                  ...   \n630709                       1998      Medium               Tier 3   \n630710                       2002       Small               Tier 2   \n630711                       2002       Small               Tier 2   \n630712                       2002       Small               Tier 2   \n630713                       2002       Small               Tier 2   \n\n              Outlet_Type  Item_Outlet_Sales  \n0       Supermarket Type1         1760.43266  \n1       Supermarket Type1          101.20160  \n2       Supermarket Type1         2042.61550  \n3       Supermarket Type1         3103.95960  \n4       Supermarket Type1          442.75700  \n...                   ...                ...  \n630709      Grocery Store                NaN  \n630710  Supermarket Type1                NaN  \n630711  Supermarket Type1                NaN  \n630712  Supermarket Type1                NaN  \n630713  Supermarket Type1                NaN  \n\n[630714 rows x 13 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Item_Identifier</th>\n      <th>Item_Weight</th>\n      <th>Item_Fat_Content</th>\n      <th>Item_Visibility</th>\n      <th>Item_Type</th>\n      <th>Item_MRP</th>\n      <th>Outlet_Identifier</th>\n      <th>Outlet_Establishment_Year</th>\n      <th>Outlet_Size</th>\n      <th>Outlet_Location_Type</th>\n      <th>Outlet_Type</th>\n      <th>Item_Outlet_Sales</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NCU06</td>\n      <td>17.600</td>\n      <td>Low Fat</td>\n      <td>0.024795</td>\n      <td>Household</td>\n      <td>231.1010</td>\n      <td>OUT017</td>\n      <td>2007</td>\n      <td>Medium</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>1760.43266</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>FDY26</td>\n      <td>20.500</td>\n      <td>Regular</td>\n      <td>0.102226</td>\n      <td>Dairy</td>\n      <td>212.6244</td>\n      <td>OUT017</td>\n      <td>2007</td>\n      <td>Medium</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>101.20160</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>FDK21</td>\n      <td>18.350</td>\n      <td>Low Fat</td>\n      <td>0.092238</td>\n      <td>Snack Foods</td>\n      <td>250.1092</td>\n      <td>OUT013</td>\n      <td>1987</td>\n      <td>High</td>\n      <td>Tier 3</td>\n      <td>Supermarket Type1</td>\n      <td>2042.61550</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>NCN05</td>\n      <td>12.150</td>\n      <td>Low Fat</td>\n      <td>0.043942</td>\n      <td>Health and Hygiene</td>\n      <td>182.2950</td>\n      <td>OUT049</td>\n      <td>1999</td>\n      <td>Medium</td>\n      <td>Tier 1</td>\n      <td>Supermarket Type1</td>\n      <td>3103.95960</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>FDA47</td>\n      <td>10.500</td>\n      <td>Regular</td>\n      <td>0.042967</td>\n      <td>Baking Goods</td>\n      <td>162.4210</td>\n      <td>OUT035</td>\n      <td>2004</td>\n      <td>Small</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>442.75700</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>630709</th>\n      <td>630709</td>\n      <td>FDG28</td>\n      <td>9.285</td>\n      <td>Regular</td>\n      <td>0.064664</td>\n      <td>Frozen Foods</td>\n      <td>121.2098</td>\n      <td>OUT010</td>\n      <td>1998</td>\n      <td>Medium</td>\n      <td>Tier 3</td>\n      <td>Grocery Store</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630710</th>\n      <td>630710</td>\n      <td>NCU05</td>\n      <td>10.100</td>\n      <td>Low Fat</td>\n      <td>0.058207</td>\n      <td>Health and Hygiene</td>\n      <td>82.6908</td>\n      <td>OUT045</td>\n      <td>2002</td>\n      <td>Small</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630711</th>\n      <td>630711</td>\n      <td>FDK09</td>\n      <td>15.200</td>\n      <td>Low Fat</td>\n      <td>0.039468</td>\n      <td>Snack Foods</td>\n      <td>126.2362</td>\n      <td>OUT045</td>\n      <td>2002</td>\n      <td>Small</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630712</th>\n      <td>630712</td>\n      <td>FDU14</td>\n      <td>17.750</td>\n      <td>Low Fat</td>\n      <td>0.041615</td>\n      <td>Dairy</td>\n      <td>98.7384</td>\n      <td>OUT045</td>\n      <td>2002</td>\n      <td>Small</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630713</th>\n      <td>630713</td>\n      <td>FDU47</td>\n      <td>12.100</td>\n      <td>Regular</td>\n      <td>0.056191</td>\n      <td>Breads</td>\n      <td>138.6838</td>\n      <td>OUT045</td>\n      <td>2002</td>\n      <td>Small</td>\n      <td>Tier 2</td>\n      <td>Supermarket Type1</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>630714 rows × 13 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**Check for missing values**","metadata":{}},{"cell_type":"code","source":"train_data.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:12:55.394975Z","iopub.execute_input":"2024-07-01T19:12:55.395388Z","iopub.status.idle":"2024-07-01T19:12:55.689991Z","shell.execute_reply.started":"2024-07-01T19:12:55.395354Z","shell.execute_reply":"2024-07-01T19:12:55.688712Z"},"trusted":true},"execution_count":200,"outputs":[{"execution_count":200,"output_type":"execute_result","data":{"text/plain":"id                           0\nItem_Identifier              0\nItem_Weight                  0\nItem_Fat_Content             0\nItem_Visibility              0\nItem_Type                    0\nItem_MRP                     0\nOutlet_Identifier            0\nOutlet_Establishment_Year    0\nOutlet_Size                  0\nOutlet_Location_Type         0\nOutlet_Type                  0\nItem_Outlet_Sales            0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"test_data.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:12:57.810763Z","iopub.execute_input":"2024-07-01T19:12:57.811213Z","iopub.status.idle":"2024-07-01T19:12:58.012005Z","shell.execute_reply.started":"2024-07-01T19:12:57.811181Z","shell.execute_reply":"2024-07-01T19:12:58.010788Z"},"trusted":true},"execution_count":201,"outputs":[{"execution_count":201,"output_type":"execute_result","data":{"text/plain":"id                           0\nItem_Identifier              0\nItem_Weight                  0\nItem_Fat_Content             0\nItem_Visibility              0\nItem_Type                    0\nItem_MRP                     0\nOutlet_Identifier            0\nOutlet_Establishment_Year    0\nOutlet_Size                  0\nOutlet_Location_Type         0\nOutlet_Type                  0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"combined_data.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:13:00.083416Z","iopub.execute_input":"2024-07-01T19:13:00.083851Z","iopub.status.idle":"2024-07-01T19:13:00.573201Z","shell.execute_reply.started":"2024-07-01T19:13:00.083815Z","shell.execute_reply":"2024-07-01T19:13:00.571888Z"},"trusted":true},"execution_count":202,"outputs":[{"execution_count":202,"output_type":"execute_result","data":{"text/plain":"id                                0\nItem_Identifier                   0\nItem_Weight                       0\nItem_Fat_Content                  0\nItem_Visibility                   0\nItem_Type                         0\nItem_MRP                          0\nOutlet_Identifier                 0\nOutlet_Establishment_Year         0\nOutlet_Size                       0\nOutlet_Location_Type              0\nOutlet_Type                       0\nItem_Outlet_Sales            252286\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"Filling in missing values","metadata":{}},{"cell_type":"code","source":"print(train_data.columns)\nprint(test_data.columns)","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:13:14.632718Z","iopub.execute_input":"2024-07-01T19:13:14.633445Z","iopub.status.idle":"2024-07-01T19:13:14.639554Z","shell.execute_reply.started":"2024-07-01T19:13:14.633409Z","shell.execute_reply":"2024-07-01T19:13:14.638361Z"},"trusted":true},"execution_count":203,"outputs":[{"name":"stdout","text":"Index(['id', 'Item_Identifier', 'Item_Weight', 'Item_Fat_Content',\n       'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier',\n       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',\n       'Outlet_Type', 'Item_Outlet_Sales'],\n      dtype='object')\nIndex(['id', 'Item_Identifier', 'Item_Weight', 'Item_Fat_Content',\n       'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier',\n       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',\n       'Outlet_Type'],\n      dtype='object')\n","output_type":"stream"}]},{"cell_type":"code","source":"print(combined_data.columns)","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:13:17.176520Z","iopub.execute_input":"2024-07-01T19:13:17.177005Z","iopub.status.idle":"2024-07-01T19:13:17.183249Z","shell.execute_reply.started":"2024-07-01T19:13:17.176962Z","shell.execute_reply":"2024-07-01T19:13:17.182036Z"},"trusted":true},"execution_count":204,"outputs":[{"name":"stdout","text":"Index(['id', 'Item_Identifier', 'Item_Weight', 'Item_Fat_Content',\n       'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier',\n       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',\n       'Outlet_Type', 'Item_Outlet_Sales'],\n      dtype='object')\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Check and fill in missing values (if necessary)","metadata":{}},{"cell_type":"code","source":"combined_data['Item_Weight'] = combined_data['Item_Weight'].fillna(combined_data['Item_Weight'].mean())\ncombined_data['Outlet_Size'] = combined_data['Outlet_Size'].fillna(combined_data['Outlet_Size'].mode()[0])","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:13:29.490837Z","iopub.execute_input":"2024-07-01T19:13:29.491799Z","iopub.status.idle":"2024-07-01T19:13:29.697143Z","shell.execute_reply.started":"2024-07-01T19:13:29.491761Z","shell.execute_reply":"2024-07-01T19:13:29.695465Z"},"trusted":true},"execution_count":205,"outputs":[]},{"cell_type":"markdown","source":"**Coding of categorical variables**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\ncat_cols = ['Item_Fat_Content', 'Item_Type', 'Outlet_Identifier', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']\nle = LabelEncoder()\nfor col in cat_cols:\n    combined_data[col] = le.fit_transform(combined_data[col])","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:14:21.083694Z","iopub.execute_input":"2024-07-01T19:14:21.084219Z","iopub.status.idle":"2024-07-01T19:14:22.215914Z","shell.execute_reply.started":"2024-07-01T19:14:21.084170Z","shell.execute_reply":"2024-07-01T19:14:22.214608Z"},"trusted":true},"execution_count":206,"outputs":[]},{"cell_type":"code","source":"combined_data[col]","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:14:53.456796Z","iopub.execute_input":"2024-07-01T19:14:53.457196Z","iopub.status.idle":"2024-07-01T19:14:53.466807Z","shell.execute_reply.started":"2024-07-01T19:14:53.457167Z","shell.execute_reply":"2024-07-01T19:14:53.465529Z"},"trusted":true},"execution_count":207,"outputs":[{"execution_count":207,"output_type":"execute_result","data":{"text/plain":"0         1\n1         1\n2         1\n3         1\n4         1\n         ..\n630709    0\n630710    1\n630711    1\n630712    1\n630713    1\nName: Outlet_Type, Length: 630714, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"combined_data","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:15:46.242158Z","iopub.execute_input":"2024-07-01T19:15:46.242556Z","iopub.status.idle":"2024-07-01T19:15:46.269387Z","shell.execute_reply.started":"2024-07-01T19:15:46.242527Z","shell.execute_reply":"2024-07-01T19:15:46.267990Z"},"trusted":true},"execution_count":208,"outputs":[{"execution_count":208,"output_type":"execute_result","data":{"text/plain":"            id Item_Identifier  Item_Weight  Item_Fat_Content  \\\n0            0           NCU06       17.600                 1   \n1            1           FDY26       20.500                 2   \n2            2           FDK21       18.350                 1   \n3            3           NCN05       12.150                 1   \n4            4           FDA47       10.500                 2   \n...        ...             ...          ...               ...   \n630709  630709           FDG28        9.285                 2   \n630710  630710           NCU05       10.100                 1   \n630711  630711           FDK09       15.200                 1   \n630712  630712           FDU14       17.750                 1   \n630713  630713           FDU47       12.100                 2   \n\n        Item_Visibility  Item_Type  Item_MRP  Outlet_Identifier  \\\n0              0.024795          9  231.1010                  2   \n1              0.102226          4  212.6244                  2   \n2              0.092238         13  250.1092                  1   \n3              0.043942          8  182.2950                  9   \n4              0.042967          0  162.4210                  6   \n...                 ...        ...       ...                ...   \n630709         0.064664          5  121.2098                  0   \n630710         0.058207          8   82.6908                  7   \n630711         0.039468         13  126.2362                  7   \n630712         0.041615          4   98.7384                  7   \n630713         0.056191          1  138.6838                  7   \n\n        Outlet_Establishment_Year  Outlet_Size  Outlet_Location_Type  \\\n0                            2007            1                     1   \n1                            2007            1                     1   \n2                            1987            0                     2   \n3                            1999            1                     0   \n4                            2004            2                     1   \n...                           ...          ...                   ...   \n630709                       1998            1                     2   \n630710                       2002            2                     1   \n630711                       2002            2                     1   \n630712                       2002            2                     1   \n630713                       2002            2                     1   \n\n        Outlet_Type  Item_Outlet_Sales  \n0                 1         1760.43266  \n1                 1          101.20160  \n2                 1         2042.61550  \n3                 1         3103.95960  \n4                 1          442.75700  \n...             ...                ...  \n630709            0                NaN  \n630710            1                NaN  \n630711            1                NaN  \n630712            1                NaN  \n630713            1                NaN  \n\n[630714 rows x 13 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Item_Identifier</th>\n      <th>Item_Weight</th>\n      <th>Item_Fat_Content</th>\n      <th>Item_Visibility</th>\n      <th>Item_Type</th>\n      <th>Item_MRP</th>\n      <th>Outlet_Identifier</th>\n      <th>Outlet_Establishment_Year</th>\n      <th>Outlet_Size</th>\n      <th>Outlet_Location_Type</th>\n      <th>Outlet_Type</th>\n      <th>Item_Outlet_Sales</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NCU06</td>\n      <td>17.600</td>\n      <td>1</td>\n      <td>0.024795</td>\n      <td>9</td>\n      <td>231.1010</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1760.43266</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>FDY26</td>\n      <td>20.500</td>\n      <td>2</td>\n      <td>0.102226</td>\n      <td>4</td>\n      <td>212.6244</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101.20160</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>FDK21</td>\n      <td>18.350</td>\n      <td>1</td>\n      <td>0.092238</td>\n      <td>13</td>\n      <td>250.1092</td>\n      <td>1</td>\n      <td>1987</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2042.61550</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>NCN05</td>\n      <td>12.150</td>\n      <td>1</td>\n      <td>0.043942</td>\n      <td>8</td>\n      <td>182.2950</td>\n      <td>9</td>\n      <td>1999</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3103.95960</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>FDA47</td>\n      <td>10.500</td>\n      <td>2</td>\n      <td>0.042967</td>\n      <td>0</td>\n      <td>162.4210</td>\n      <td>6</td>\n      <td>2004</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>442.75700</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>630709</th>\n      <td>630709</td>\n      <td>FDG28</td>\n      <td>9.285</td>\n      <td>2</td>\n      <td>0.064664</td>\n      <td>5</td>\n      <td>121.2098</td>\n      <td>0</td>\n      <td>1998</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630710</th>\n      <td>630710</td>\n      <td>NCU05</td>\n      <td>10.100</td>\n      <td>1</td>\n      <td>0.058207</td>\n      <td>8</td>\n      <td>82.6908</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630711</th>\n      <td>630711</td>\n      <td>FDK09</td>\n      <td>15.200</td>\n      <td>1</td>\n      <td>0.039468</td>\n      <td>13</td>\n      <td>126.2362</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630712</th>\n      <td>630712</td>\n      <td>FDU14</td>\n      <td>17.750</td>\n      <td>1</td>\n      <td>0.041615</td>\n      <td>4</td>\n      <td>98.7384</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630713</th>\n      <td>630713</td>\n      <td>FDU47</td>\n      <td>12.100</td>\n      <td>2</td>\n      <td>0.056191</td>\n      <td>1</td>\n      <td>138.6838</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>630714 rows × 13 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Calculate unique values\nunique_item_identifiers = combined_data['Item_Identifier'].unique()\nnum_unique = len(unique_item_identifiers)\nnum_total = combined_data.shape[0]\n\n# Calculate duplicates\nnum_duplicates = num_total - num_unique\n\nprint(f\"Unique values in 'Item_Identifier': {num_unique}\")\nprint(f\"Repeated values in 'Item_Identifier': {num_duplicates}\")","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:17:49.468431Z","iopub.execute_input":"2024-07-01T19:17:49.469459Z","iopub.status.idle":"2024-07-01T19:17:49.531957Z","shell.execute_reply.started":"2024-07-01T19:17:49.469418Z","shell.execute_reply":"2024-07-01T19:17:49.530567Z"},"trusted":true},"execution_count":211,"outputs":[{"name":"stdout","text":"Unique values in 'Item_Identifier': 1559\nRepeated values in 'Item_Identifier': 629155\n","output_type":"stream"}]},{"cell_type":"code","source":"combined_data = combined_data.drop('Item_Identifier', axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:26.680298Z","iopub.execute_input":"2024-07-01T19:28:26.681002Z","iopub.status.idle":"2024-07-01T19:28:26.749585Z","shell.execute_reply.started":"2024-07-01T19:28:26.680964Z","shell.execute_reply":"2024-07-01T19:28:26.748356Z"},"trusted":true},"execution_count":221,"outputs":[]},{"cell_type":"code","source":"combined_data","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:34.229211Z","iopub.execute_input":"2024-07-01T19:28:34.229674Z","iopub.status.idle":"2024-07-01T19:28:34.252351Z","shell.execute_reply.started":"2024-07-01T19:28:34.229610Z","shell.execute_reply":"2024-07-01T19:28:34.251022Z"},"trusted":true},"execution_count":222,"outputs":[{"execution_count":222,"output_type":"execute_result","data":{"text/plain":"            id  Item_Weight  Item_Fat_Content  Item_Visibility  Item_Type  \\\n0            0     1.037592                 1        -0.633790          9   \n1            1     1.665566                 2         1.016356          4   \n2            2     1.199999                 1         0.803495         13   \n3            3    -0.142565                 1        -0.225749          8   \n4            4    -0.499860                 2        -0.246537          0   \n...        ...          ...               ...              ...        ...   \n630709  630709    -0.762960                 2         0.215849          5   \n630710  630710    -0.586477                 1         0.078256          8   \n630711  630711     0.517890                 1        -0.321104         13   \n630712  630712     1.070074                 1        -0.275334          4   \n630713  630713    -0.153392                 2         0.035297          1   \n\n        Item_MRP  Outlet_Identifier  Outlet_Establishment_Year  Outlet_Size  \\\n0       1.528122                  2                       2007            1   \n1       1.225407                  2                       2007            1   \n2       1.839547                  1                       1987            0   \n3       0.728499                  9                       1999            1   \n4       0.402889                  6                       2004            2   \n...          ...                ...                        ...          ...   \n630709 -0.272304                  0                       1998            1   \n630710 -0.903388                  7                       2002            2   \n630711 -0.189953                  7                       2002            2   \n630712 -0.640469                  7                       2002            2   \n630713  0.013985                  7                       2002            2   \n\n        Outlet_Location_Type  Outlet_Type  Item_Outlet_Sales  \n0                          1            1         1760.43266  \n1                          1            1          101.20160  \n2                          2            1         2042.61550  \n3                          0            1         3103.95960  \n4                          1            1          442.75700  \n...                      ...          ...                ...  \n630709                     2            0                NaN  \n630710                     1            1                NaN  \n630711                     1            1                NaN  \n630712                     1            1                NaN  \n630713                     1            1                NaN  \n\n[630714 rows x 12 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Item_Weight</th>\n      <th>Item_Fat_Content</th>\n      <th>Item_Visibility</th>\n      <th>Item_Type</th>\n      <th>Item_MRP</th>\n      <th>Outlet_Identifier</th>\n      <th>Outlet_Establishment_Year</th>\n      <th>Outlet_Size</th>\n      <th>Outlet_Location_Type</th>\n      <th>Outlet_Type</th>\n      <th>Item_Outlet_Sales</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1.037592</td>\n      <td>1</td>\n      <td>-0.633790</td>\n      <td>9</td>\n      <td>1.528122</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1760.43266</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1.665566</td>\n      <td>2</td>\n      <td>1.016356</td>\n      <td>4</td>\n      <td>1.225407</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101.20160</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>1.199999</td>\n      <td>1</td>\n      <td>0.803495</td>\n      <td>13</td>\n      <td>1.839547</td>\n      <td>1</td>\n      <td>1987</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2042.61550</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>-0.142565</td>\n      <td>1</td>\n      <td>-0.225749</td>\n      <td>8</td>\n      <td>0.728499</td>\n      <td>9</td>\n      <td>1999</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3103.95960</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>-0.499860</td>\n      <td>2</td>\n      <td>-0.246537</td>\n      <td>0</td>\n      <td>0.402889</td>\n      <td>6</td>\n      <td>2004</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>442.75700</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>630709</th>\n      <td>630709</td>\n      <td>-0.762960</td>\n      <td>2</td>\n      <td>0.215849</td>\n      <td>5</td>\n      <td>-0.272304</td>\n      <td>0</td>\n      <td>1998</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630710</th>\n      <td>630710</td>\n      <td>-0.586477</td>\n      <td>1</td>\n      <td>0.078256</td>\n      <td>8</td>\n      <td>-0.903388</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630711</th>\n      <td>630711</td>\n      <td>0.517890</td>\n      <td>1</td>\n      <td>-0.321104</td>\n      <td>13</td>\n      <td>-0.189953</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630712</th>\n      <td>630712</td>\n      <td>1.070074</td>\n      <td>1</td>\n      <td>-0.275334</td>\n      <td>4</td>\n      <td>-0.640469</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630713</th>\n      <td>630713</td>\n      <td>-0.153392</td>\n      <td>2</td>\n      <td>0.035297</td>\n      <td>1</td>\n      <td>0.013985</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>630714 rows × 12 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**Scale number data**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nnumerical_features = ['Item_Weight', 'Item_Visibility', 'Item_MRP']\ncombined_data[numerical_features] = scaler.fit_transform(combined_data[numerical_features])","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:42.705375Z","iopub.execute_input":"2024-07-01T19:28:42.705819Z","iopub.status.idle":"2024-07-01T19:28:42.776705Z","shell.execute_reply.started":"2024-07-01T19:28:42.705784Z","shell.execute_reply":"2024-07-01T19:28:42.775493Z"},"trusted":true},"execution_count":223,"outputs":[]},{"cell_type":"code","source":"combined_data","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:44.781384Z","iopub.execute_input":"2024-07-01T19:28:44.781828Z","iopub.status.idle":"2024-07-01T19:28:44.804850Z","shell.execute_reply.started":"2024-07-01T19:28:44.781792Z","shell.execute_reply":"2024-07-01T19:28:44.803597Z"},"trusted":true},"execution_count":224,"outputs":[{"execution_count":224,"output_type":"execute_result","data":{"text/plain":"            id  Item_Weight  Item_Fat_Content  Item_Visibility  Item_Type  \\\n0            0     1.037592                 1        -0.633790          9   \n1            1     1.665566                 2         1.016356          4   \n2            2     1.199999                 1         0.803495         13   \n3            3    -0.142565                 1        -0.225749          8   \n4            4    -0.499860                 2        -0.246537          0   \n...        ...          ...               ...              ...        ...   \n630709  630709    -0.762960                 2         0.215849          5   \n630710  630710    -0.586477                 1         0.078256          8   \n630711  630711     0.517890                 1        -0.321104         13   \n630712  630712     1.070074                 1        -0.275334          4   \n630713  630713    -0.153392                 2         0.035297          1   \n\n        Item_MRP  Outlet_Identifier  Outlet_Establishment_Year  Outlet_Size  \\\n0       1.528122                  2                       2007            1   \n1       1.225407                  2                       2007            1   \n2       1.839547                  1                       1987            0   \n3       0.728499                  9                       1999            1   \n4       0.402889                  6                       2004            2   \n...          ...                ...                        ...          ...   \n630709 -0.272304                  0                       1998            1   \n630710 -0.903388                  7                       2002            2   \n630711 -0.189953                  7                       2002            2   \n630712 -0.640469                  7                       2002            2   \n630713  0.013985                  7                       2002            2   \n\n        Outlet_Location_Type  Outlet_Type  Item_Outlet_Sales  \n0                          1            1         1760.43266  \n1                          1            1          101.20160  \n2                          2            1         2042.61550  \n3                          0            1         3103.95960  \n4                          1            1          442.75700  \n...                      ...          ...                ...  \n630709                     2            0                NaN  \n630710                     1            1                NaN  \n630711                     1            1                NaN  \n630712                     1            1                NaN  \n630713                     1            1                NaN  \n\n[630714 rows x 12 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Item_Weight</th>\n      <th>Item_Fat_Content</th>\n      <th>Item_Visibility</th>\n      <th>Item_Type</th>\n      <th>Item_MRP</th>\n      <th>Outlet_Identifier</th>\n      <th>Outlet_Establishment_Year</th>\n      <th>Outlet_Size</th>\n      <th>Outlet_Location_Type</th>\n      <th>Outlet_Type</th>\n      <th>Item_Outlet_Sales</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1.037592</td>\n      <td>1</td>\n      <td>-0.633790</td>\n      <td>9</td>\n      <td>1.528122</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1760.43266</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1.665566</td>\n      <td>2</td>\n      <td>1.016356</td>\n      <td>4</td>\n      <td>1.225407</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101.20160</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>1.199999</td>\n      <td>1</td>\n      <td>0.803495</td>\n      <td>13</td>\n      <td>1.839547</td>\n      <td>1</td>\n      <td>1987</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2042.61550</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>-0.142565</td>\n      <td>1</td>\n      <td>-0.225749</td>\n      <td>8</td>\n      <td>0.728499</td>\n      <td>9</td>\n      <td>1999</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3103.95960</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>-0.499860</td>\n      <td>2</td>\n      <td>-0.246537</td>\n      <td>0</td>\n      <td>0.402889</td>\n      <td>6</td>\n      <td>2004</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>442.75700</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>630709</th>\n      <td>630709</td>\n      <td>-0.762960</td>\n      <td>2</td>\n      <td>0.215849</td>\n      <td>5</td>\n      <td>-0.272304</td>\n      <td>0</td>\n      <td>1998</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630710</th>\n      <td>630710</td>\n      <td>-0.586477</td>\n      <td>1</td>\n      <td>0.078256</td>\n      <td>8</td>\n      <td>-0.903388</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630711</th>\n      <td>630711</td>\n      <td>0.517890</td>\n      <td>1</td>\n      <td>-0.321104</td>\n      <td>13</td>\n      <td>-0.189953</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630712</th>\n      <td>630712</td>\n      <td>1.070074</td>\n      <td>1</td>\n      <td>-0.275334</td>\n      <td>4</td>\n      <td>-0.640469</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>630713</th>\n      <td>630713</td>\n      <td>-0.153392</td>\n      <td>2</td>\n      <td>0.035297</td>\n      <td>1</td>\n      <td>0.013985</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>630714 rows × 12 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**Building the model**","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_log_error","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:48.260593Z","iopub.execute_input":"2024-07-01T19:28:48.261653Z","iopub.status.idle":"2024-07-01T19:28:48.267647Z","shell.execute_reply.started":"2024-07-01T19:28:48.261585Z","shell.execute_reply":"2024-07-01T19:28:48.266279Z"},"trusted":true},"execution_count":225,"outputs":[]},{"cell_type":"markdown","source":"Separate train and test data","metadata":{}},{"cell_type":"code","source":"train_data_scaled = combined_data.iloc[:len(train_data), :]\ntest_data_scaled = combined_data.iloc[len(train_data):, :]","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:50.163411Z","iopub.execute_input":"2024-07-01T19:28:50.164375Z","iopub.status.idle":"2024-07-01T19:28:50.170584Z","shell.execute_reply.started":"2024-07-01T19:28:50.164334Z","shell.execute_reply":"2024-07-01T19:28:50.169172Z"},"trusted":true},"execution_count":226,"outputs":[]},{"cell_type":"markdown","source":"Split the training data into training and validation sets","metadata":{}},{"cell_type":"code","source":"X = train_data_scaled.drop('Item_Outlet_Sales', axis=1)\ny = train_data_scaled['Item_Outlet_Sales']\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:53.049263Z","iopub.execute_input":"2024-07-01T19:28:53.049723Z","iopub.status.idle":"2024-07-01T19:28:53.176678Z","shell.execute_reply.started":"2024-07-01T19:28:53.049687Z","shell.execute_reply":"2024-07-01T19:28:53.175408Z"},"trusted":true},"execution_count":227,"outputs":[]},{"cell_type":"code","source":"X","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:55.725596Z","iopub.execute_input":"2024-07-01T19:28:55.726081Z","iopub.status.idle":"2024-07-01T19:28:55.745117Z","shell.execute_reply.started":"2024-07-01T19:28:55.726045Z","shell.execute_reply":"2024-07-01T19:28:55.743944Z"},"trusted":true},"execution_count":228,"outputs":[{"execution_count":228,"output_type":"execute_result","data":{"text/plain":"            id  Item_Weight  Item_Fat_Content  Item_Visibility  Item_Type  \\\n0            0     1.037592                 1        -0.633790          9   \n1            1     1.665566                 2         1.016356          4   \n2            2     1.199999                 1         0.803495         13   \n3            3    -0.142565                 1        -0.225749          8   \n4            4    -0.499860                 2        -0.246537          0   \n...        ...          ...               ...              ...        ...   \n378423  378423     0.528717                 1         1.054735          4   \n378424  378424     0.842704                 2        -0.759306          0   \n378425  378425     0.063150                 1        -0.150299          5   \n378426  378426    -0.847411                 1         1.438086          2   \n378427  378427     1.124209                 1         0.258396          9   \n\n        Item_MRP  Outlet_Identifier  Outlet_Establishment_Year  Outlet_Size  \\\n0       1.528122                  2                       2007            1   \n1       1.225407                  2                       2007            1   \n2       1.839547                  1                       1987            0   \n3       0.728499                  9                       1999            1   \n4       0.402889                  6                       2004            2   \n...          ...                ...                        ...          ...   \n378423  0.040717                  6                       2004            2   \n378424 -0.807370                  1                       1987            0   \n378425  1.290254                  7                       2002            2   \n378426 -1.419312                  3                       2009            1   \n378427  0.304154                  1                       1987            0   \n\n        Outlet_Location_Type  Outlet_Type  \n0                          1            1  \n1                          1            1  \n2                          2            1  \n3                          0            1  \n4                          1            1  \n...                      ...          ...  \n378423                     1            1  \n378424                     2            1  \n378425                     1            1  \n378426                     2            2  \n378427                     2            1  \n\n[378428 rows x 11 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Item_Weight</th>\n      <th>Item_Fat_Content</th>\n      <th>Item_Visibility</th>\n      <th>Item_Type</th>\n      <th>Item_MRP</th>\n      <th>Outlet_Identifier</th>\n      <th>Outlet_Establishment_Year</th>\n      <th>Outlet_Size</th>\n      <th>Outlet_Location_Type</th>\n      <th>Outlet_Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1.037592</td>\n      <td>1</td>\n      <td>-0.633790</td>\n      <td>9</td>\n      <td>1.528122</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1.665566</td>\n      <td>2</td>\n      <td>1.016356</td>\n      <td>4</td>\n      <td>1.225407</td>\n      <td>2</td>\n      <td>2007</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>1.199999</td>\n      <td>1</td>\n      <td>0.803495</td>\n      <td>13</td>\n      <td>1.839547</td>\n      <td>1</td>\n      <td>1987</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>-0.142565</td>\n      <td>1</td>\n      <td>-0.225749</td>\n      <td>8</td>\n      <td>0.728499</td>\n      <td>9</td>\n      <td>1999</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>-0.499860</td>\n      <td>2</td>\n      <td>-0.246537</td>\n      <td>0</td>\n      <td>0.402889</td>\n      <td>6</td>\n      <td>2004</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>378423</th>\n      <td>378423</td>\n      <td>0.528717</td>\n      <td>1</td>\n      <td>1.054735</td>\n      <td>4</td>\n      <td>0.040717</td>\n      <td>6</td>\n      <td>2004</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>378424</th>\n      <td>378424</td>\n      <td>0.842704</td>\n      <td>2</td>\n      <td>-0.759306</td>\n      <td>0</td>\n      <td>-0.807370</td>\n      <td>1</td>\n      <td>1987</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>378425</th>\n      <td>378425</td>\n      <td>0.063150</td>\n      <td>1</td>\n      <td>-0.150299</td>\n      <td>5</td>\n      <td>1.290254</td>\n      <td>7</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>378426</th>\n      <td>378426</td>\n      <td>-0.847411</td>\n      <td>1</td>\n      <td>1.438086</td>\n      <td>2</td>\n      <td>-1.419312</td>\n      <td>3</td>\n      <td>2009</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>378427</th>\n      <td>378427</td>\n      <td>1.124209</td>\n      <td>1</td>\n      <td>0.258396</td>\n      <td>9</td>\n      <td>0.304154</td>\n      <td>1</td>\n      <td>1987</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>378428 rows × 11 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:28:58.207852Z","iopub.execute_input":"2024-07-01T19:28:58.209044Z","iopub.status.idle":"2024-07-01T19:28:58.218043Z","shell.execute_reply.started":"2024-07-01T19:28:58.209005Z","shell.execute_reply":"2024-07-01T19:28:58.216684Z"},"trusted":true},"execution_count":229,"outputs":[{"execution_count":229,"output_type":"execute_result","data":{"text/plain":"0         1760.43266\n1          101.20160\n2         2042.61550\n3         3103.95960\n4          442.75700\n             ...    \n378423    1544.65600\n378424    1745.07239\n378425    3918.89880\n378426     703.08480\n378427    2656.54200\nName: Item_Outlet_Sales, Length: 378428, dtype: float64"},"metadata":{}}]},{"cell_type":"markdown","source":"Create and train our model","metadata":{}},{"cell_type":"code","source":"model = RandomForestRegressor(n_estimators=100, random_state=42)\nmodel.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:31:02.712742Z","iopub.execute_input":"2024-07-01T19:31:02.714160Z","iopub.status.idle":"2024-07-01T19:35:46.416274Z","shell.execute_reply.started":"2024-07-01T19:31:02.714110Z","shell.execute_reply":"2024-07-01T19:35:46.415040Z"},"trusted":true},"execution_count":232,"outputs":[{"execution_count":232,"output_type":"execute_result","data":{"text/plain":"RandomForestRegressor(random_state=42)","text/html":"<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"#model = XGBRegressor(n_estimators=100, random_state=42)\n#model.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:29:03.160392Z","iopub.execute_input":"2024-07-01T19:29:03.160825Z","iopub.status.idle":"2024-07-01T19:29:04.851832Z","shell.execute_reply.started":"2024-07-01T19:29:03.160791Z","shell.execute_reply":"2024-07-01T19:29:04.850732Z"},"trusted":true},"execution_count":230,"outputs":[{"execution_count":230,"output_type":"execute_result","data":{"text/plain":"XGBRegressor(base_score=None, booster=None, callbacks=None,\n             colsample_bylevel=None, colsample_bynode=None,\n             colsample_bytree=None, device=None, early_stopping_rounds=None,\n             enable_categorical=False, eval_metric=None, feature_types=None,\n             gamma=None, grow_policy=None, importance_type=None,\n             interaction_constraints=None, learning_rate=None, max_bin=None,\n             max_cat_threshold=None, max_cat_to_onehot=None,\n             max_delta_step=None, max_depth=None, max_leaves=None,\n             min_child_weight=None, missing=nan, monotone_constraints=None,\n             multi_strategy=None, n_estimators=None, n_jobs=None,\n             num_parallel_tree=None, random_state=42, ...)","text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n             colsample_bylevel=None, colsample_bynode=None,\n             colsample_bytree=None, device=None, early_stopping_rounds=None,\n             enable_categorical=False, eval_metric=None, feature_types=None,\n             gamma=None, grow_policy=None, importance_type=None,\n             interaction_constraints=None, learning_rate=None, max_bin=None,\n             max_cat_threshold=None, max_cat_to_onehot=None,\n             max_delta_step=None, max_depth=None, max_leaves=None,\n             min_child_weight=None, missing=nan, monotone_constraints=None,\n             multi_strategy=None, n_estimators=None, n_jobs=None,\n             num_parallel_tree=None, random_state=42, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBRegressor</label><div class=\"sk-toggleable__content\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n             colsample_bylevel=None, colsample_bynode=None,\n             colsample_bytree=None, device=None, early_stopping_rounds=None,\n             enable_categorical=False, eval_metric=None, feature_types=None,\n             gamma=None, grow_policy=None, importance_type=None,\n             interaction_constraints=None, learning_rate=None, max_bin=None,\n             max_cat_threshold=None, max_cat_to_onehot=None,\n             max_delta_step=None, max_depth=None, max_leaves=None,\n             min_child_weight=None, missing=nan, monotone_constraints=None,\n             multi_strategy=None, n_estimators=None, n_jobs=None,\n             num_parallel_tree=None, random_state=42, ...)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"model","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:35:46.707745Z","iopub.execute_input":"2024-07-01T19:35:46.708158Z","iopub.status.idle":"2024-07-01T19:35:46.716559Z","shell.execute_reply.started":"2024-07-01T19:35:46.708127Z","shell.execute_reply":"2024-07-01T19:35:46.715284Z"},"trusted":true},"execution_count":234,"outputs":[{"execution_count":234,"output_type":"execute_result","data":{"text/plain":"RandomForestRegressor(random_state=42)","text/html":"<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Prediction on the validation set","metadata":{}},{"cell_type":"code","source":"y_pred = model.predict(X_val)","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:35:52.438300Z","iopub.execute_input":"2024-07-01T19:35:52.438771Z","iopub.status.idle":"2024-07-01T19:35:58.086854Z","shell.execute_reply.started":"2024-07-01T19:35:52.438735Z","shell.execute_reply":"2024-07-01T19:35:58.085692Z"},"trusted":true},"execution_count":235,"outputs":[]},{"cell_type":"markdown","source":"Evaluation of the model","metadata":{}},{"cell_type":"code","source":"rmsle = np.sqrt(mean_squared_log_error(y_val, y_pred))\nprint('RMSLE:', rmsle)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-01T19:36:15.269595Z","iopub.execute_input":"2024-07-01T19:36:15.270484Z","iopub.status.idle":"2024-07-01T19:36:15.289779Z","shell.execute_reply.started":"2024-07-01T19:36:15.270443Z","shell.execute_reply":"2024-07-01T19:36:15.287885Z"},"trusted":true},"execution_count":236,"outputs":[{"name":"stdout","text":"RMSLE: 0.7624597158681509\n","output_type":"stream"}]}]}