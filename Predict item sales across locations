{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "38b0a2e7",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:55.268367Z",
     "iopub.status.busy": "2024-07-01T20:45:55.267952Z",
     "iopub.status.idle": "2024-07-01T20:45:56.126307Z",
     "shell.execute_reply": "2024-07-01T20:45:56.124988Z"
    },
    "papermill": {
     "duration": 0.873633,
     "end_time": "2024-07-01T20:45:56.128703",
     "exception": false,
     "start_time": "2024-07-01T20:45:55.255070",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/ml-competition-2024-for-ukrainians/sample_submission.csv\n",
      "/kaggle/input/ml-competition-2024-for-ukrainians/train.csv\n",
      "/kaggle/input/ml-competition-2024-for-ukrainians/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c4ae906",
   "metadata": {
    "papermill": {
     "duration": 0.010777,
     "end_time": "2024-07-01T20:45:56.151024",
     "exception": false,
     "start_time": "2024-07-01T20:45:56.140247",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Explore the data**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7cbb7364",
   "metadata": {
    "papermill": {
     "duration": 0.0106,
     "end_time": "2024-07-01T20:45:56.172610",
     "exception": false,
     "start_time": "2024-07-01T20:45:56.162010",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let's import libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "efccc10e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:56.196404Z",
     "iopub.status.busy": "2024-07-01T20:45:56.195853Z",
     "iopub.status.idle": "2024-07-01T20:45:56.201417Z",
     "shell.execute_reply": "2024-07-01T20:45:56.200104Z"
    },
    "papermill": {
     "duration": 0.01999,
     "end_time": "2024-07-01T20:45:56.203574",
     "exception": false,
     "start_time": "2024-07-01T20:45:56.183584",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import os"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e417baa9",
   "metadata": {
    "papermill": {
     "duration": 0.010627,
     "end_time": "2024-07-01T20:45:56.226064",
     "exception": false,
     "start_time": "2024-07-01T20:45:56.215437",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Load train and test datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bdc4b3cd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:56.249640Z",
     "iopub.status.busy": "2024-07-01T20:45:56.249248Z",
     "iopub.status.idle": "2024-07-01T20:45:57.410527Z",
     "shell.execute_reply": "2024-07-01T20:45:57.409365Z"
    },
    "papermill": {
     "duration": 1.176048,
     "end_time": "2024-07-01T20:45:57.413075",
     "exception": false,
     "start_time": "2024-07-01T20:45:56.237027",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>NCU06</td>\n",
       "      <td>17.60</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.024795</td>\n",
       "      <td>Household</td>\n",
       "      <td>231.1010</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>1760.43266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>FDY26</td>\n",
       "      <td>20.50</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.102226</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>212.6244</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>101.20160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>FDK21</td>\n",
       "      <td>18.35</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.092238</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>250.1092</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2042.61550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>NCN05</td>\n",
       "      <td>12.15</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.043942</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>182.2950</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3103.95960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>FDA47</td>\n",
       "      <td>10.50</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.042967</td>\n",
       "      <td>Baking Goods</td>\n",
       "      <td>162.4210</td>\n",
       "      <td>OUT035</td>\n",
       "      <td>2004</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>442.75700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0   0           NCU06        17.60          Low Fat         0.024795   \n",
       "1   1           FDY26        20.50          Regular         0.102226   \n",
       "2   2           FDK21        18.35          Low Fat         0.092238   \n",
       "3   3           NCN05        12.15          Low Fat         0.043942   \n",
       "4   4           FDA47        10.50          Regular         0.042967   \n",
       "\n",
       "            Item_Type  Item_MRP Outlet_Identifier  Outlet_Establishment_Year  \\\n",
       "0           Household  231.1010            OUT017                       2007   \n",
       "1               Dairy  212.6244            OUT017                       2007   \n",
       "2         Snack Foods  250.1092            OUT013                       1987   \n",
       "3  Health and Hygiene  182.2950            OUT049                       1999   \n",
       "4        Baking Goods  162.4210            OUT035                       2004   \n",
       "\n",
       "  Outlet_Size Outlet_Location_Type        Outlet_Type  Item_Outlet_Sales  \n",
       "0      Medium               Tier 2  Supermarket Type1         1760.43266  \n",
       "1      Medium               Tier 2  Supermarket Type1          101.20160  \n",
       "2        High               Tier 3  Supermarket Type1         2042.61550  \n",
       "3      Medium               Tier 1  Supermarket Type1         3103.95960  \n",
       "4       Small               Tier 2  Supermarket Type1          442.75700  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data = pd.read_csv(\"/kaggle/input/ml-competition-2024-for-ukrainians/train.csv\")\n",
    "train_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "add93e55",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:57.438347Z",
     "iopub.status.busy": "2024-07-01T20:45:57.437929Z",
     "iopub.status.idle": "2024-07-01T20:45:57.444942Z",
     "shell.execute_reply": "2024-07-01T20:45:57.443944Z"
    },
    "papermill": {
     "duration": 0.022772,
     "end_time": "2024-07-01T20:45:57.447238",
     "exception": false,
     "start_time": "2024-07-01T20:45:57.424466",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(378428, 13)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "83b9b1fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:57.471771Z",
     "iopub.status.busy": "2024-07-01T20:45:57.471390Z",
     "iopub.status.idle": "2024-07-01T20:45:58.139763Z",
     "shell.execute_reply": "2024-07-01T20:45:58.138728Z"
    },
    "papermill": {
     "duration": 0.683422,
     "end_time": "2024-07-01T20:45:58.142136",
     "exception": false,
     "start_time": "2024-07-01T20:45:57.458714",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>378428</td>\n",
       "      <td>FDP45</td>\n",
       "      <td>15.70</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.074779</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>256.1014</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>378429</td>\n",
       "      <td>FDY44</td>\n",
       "      <td>14.15</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.024821</td>\n",
       "      <td>Fruits and Vegetables</td>\n",
       "      <td>196.4110</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>378430</td>\n",
       "      <td>NCV29</td>\n",
       "      <td>11.80</td>\n",
       "      <td>LF</td>\n",
       "      <td>0.032813</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>177.6686</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>378431</td>\n",
       "      <td>FDG53</td>\n",
       "      <td>10.00</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.087646</td>\n",
       "      <td>Frozen Foods</td>\n",
       "      <td>138.6838</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>378432</td>\n",
       "      <td>NCB18</td>\n",
       "      <td>19.60</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Household</td>\n",
       "      <td>89.7514</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0  378428           FDP45        15.70          Low Fat         0.074779   \n",
       "1  378429           FDY44        14.15          Regular         0.024821   \n",
       "2  378430           NCV29        11.80               LF         0.032813   \n",
       "3  378431           FDG53        10.00          Low Fat         0.087646   \n",
       "4  378432           NCB18        19.60          Low Fat         0.000000   \n",
       "\n",
       "               Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0            Snack Foods  256.1014            OUT049   \n",
       "1  Fruits and Vegetables  196.4110            OUT017   \n",
       "2     Health and Hygiene  177.6686            OUT013   \n",
       "3           Frozen Foods  138.6838            OUT017   \n",
       "4              Household   89.7514            OUT049   \n",
       "\n",
       "   Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                       1999      Medium               Tier 1   \n",
       "1                       2007      Medium               Tier 2   \n",
       "2                       1987        High               Tier 3   \n",
       "3                       2007      Medium               Tier 2   \n",
       "4                       1999      Medium               Tier 1   \n",
       "\n",
       "         Outlet_Type  \n",
       "0  Supermarket Type1  \n",
       "1  Supermarket Type1  \n",
       "2  Supermarket Type1  \n",
       "3  Supermarket Type1  \n",
       "4  Supermarket Type1  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data = pd.read_csv(\"/kaggle/input/ml-competition-2024-for-ukrainians/test.csv\")\n",
    "test_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e0d30f6f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:58.167169Z",
     "iopub.status.busy": "2024-07-01T20:45:58.166786Z",
     "iopub.status.idle": "2024-07-01T20:45:58.173259Z",
     "shell.execute_reply": "2024-07-01T20:45:58.172237Z"
    },
    "papermill": {
     "duration": 0.021607,
     "end_time": "2024-07-01T20:45:58.175438",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.153831",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(252286, 12)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e7e7e4e",
   "metadata": {
    "papermill": {
     "duration": 0.011214,
     "end_time": "2024-07-01T20:45:58.198621",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.187407",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For further work, let's combine the dataframes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3e170da6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:58.223308Z",
     "iopub.status.busy": "2024-07-01T20:45:58.222909Z",
     "iopub.status.idle": "2024-07-01T20:45:58.279032Z",
     "shell.execute_reply": "2024-07-01T20:45:58.278006Z"
    },
    "papermill": {
     "duration": 0.071268,
     "end_time": "2024-07-01T20:45:58.281387",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.210119",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>NCU06</td>\n",
       "      <td>17.600</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.024795</td>\n",
       "      <td>Household</td>\n",
       "      <td>231.1010</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>1760.43266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>FDY26</td>\n",
       "      <td>20.500</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.102226</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>212.6244</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>101.20160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>FDK21</td>\n",
       "      <td>18.350</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.092238</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>250.1092</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2042.61550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>NCN05</td>\n",
       "      <td>12.150</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.043942</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>182.2950</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3103.95960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>FDA47</td>\n",
       "      <td>10.500</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.042967</td>\n",
       "      <td>Baking Goods</td>\n",
       "      <td>162.4210</td>\n",
       "      <td>OUT035</td>\n",
       "      <td>2004</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>442.75700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630709</th>\n",
       "      <td>630709</td>\n",
       "      <td>FDG28</td>\n",
       "      <td>9.285</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.064664</td>\n",
       "      <td>Frozen Foods</td>\n",
       "      <td>121.2098</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630710</th>\n",
       "      <td>630710</td>\n",
       "      <td>NCU05</td>\n",
       "      <td>10.100</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.058207</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>82.6908</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630711</th>\n",
       "      <td>630711</td>\n",
       "      <td>FDK09</td>\n",
       "      <td>15.200</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.039468</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>126.2362</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630712</th>\n",
       "      <td>630712</td>\n",
       "      <td>FDU14</td>\n",
       "      <td>17.750</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.041615</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>98.7384</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630713</th>\n",
       "      <td>630713</td>\n",
       "      <td>FDU47</td>\n",
       "      <td>12.100</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.056191</td>\n",
       "      <td>Breads</td>\n",
       "      <td>138.6838</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>630714 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0            0           NCU06       17.600          Low Fat         0.024795   \n",
       "1            1           FDY26       20.500          Regular         0.102226   \n",
       "2            2           FDK21       18.350          Low Fat         0.092238   \n",
       "3            3           NCN05       12.150          Low Fat         0.043942   \n",
       "4            4           FDA47       10.500          Regular         0.042967   \n",
       "...        ...             ...          ...              ...              ...   \n",
       "630709  630709           FDG28        9.285          Regular         0.064664   \n",
       "630710  630710           NCU05       10.100          Low Fat         0.058207   \n",
       "630711  630711           FDK09       15.200          Low Fat         0.039468   \n",
       "630712  630712           FDU14       17.750          Low Fat         0.041615   \n",
       "630713  630713           FDU47       12.100          Regular         0.056191   \n",
       "\n",
       "                 Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0                Household  231.1010            OUT017   \n",
       "1                    Dairy  212.6244            OUT017   \n",
       "2              Snack Foods  250.1092            OUT013   \n",
       "3       Health and Hygiene  182.2950            OUT049   \n",
       "4             Baking Goods  162.4210            OUT035   \n",
       "...                    ...       ...               ...   \n",
       "630709        Frozen Foods  121.2098            OUT010   \n",
       "630710  Health and Hygiene   82.6908            OUT045   \n",
       "630711         Snack Foods  126.2362            OUT045   \n",
       "630712               Dairy   98.7384            OUT045   \n",
       "630713              Breads  138.6838            OUT045   \n",
       "\n",
       "        Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                            2007      Medium               Tier 2   \n",
       "1                            2007      Medium               Tier 2   \n",
       "2                            1987        High               Tier 3   \n",
       "3                            1999      Medium               Tier 1   \n",
       "4                            2004       Small               Tier 2   \n",
       "...                           ...         ...                  ...   \n",
       "630709                       1998      Medium               Tier 3   \n",
       "630710                       2002       Small               Tier 2   \n",
       "630711                       2002       Small               Tier 2   \n",
       "630712                       2002       Small               Tier 2   \n",
       "630713                       2002       Small               Tier 2   \n",
       "\n",
       "              Outlet_Type  Item_Outlet_Sales  \n",
       "0       Supermarket Type1         1760.43266  \n",
       "1       Supermarket Type1          101.20160  \n",
       "2       Supermarket Type1         2042.61550  \n",
       "3       Supermarket Type1         3103.95960  \n",
       "4       Supermarket Type1          442.75700  \n",
       "...                   ...                ...  \n",
       "630709      Grocery Store                NaN  \n",
       "630710  Supermarket Type1                NaN  \n",
       "630711  Supermarket Type1                NaN  \n",
       "630712  Supermarket Type1                NaN  \n",
       "630713  Supermarket Type1                NaN  \n",
       "\n",
       "[630714 rows x 13 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_data = pd.concat([train_data, test_data], axis=0, ignore_index=True)\n",
    "combined_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f22e343",
   "metadata": {
    "papermill": {
     "duration": 0.011918,
     "end_time": "2024-07-01T20:45:58.305421",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.293503",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Check for missing values**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "12708924",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:58.331038Z",
     "iopub.status.busy": "2024-07-01T20:45:58.330662Z",
     "iopub.status.idle": "2024-07-01T20:45:58.461281Z",
     "shell.execute_reply": "2024-07-01T20:45:58.460169Z"
    },
    "papermill": {
     "duration": 0.146146,
     "end_time": "2024-07-01T20:45:58.463656",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.317510",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                           0\n",
       "Item_Identifier              0\n",
       "Item_Weight                  0\n",
       "Item_Fat_Content             0\n",
       "Item_Visibility              0\n",
       "Item_Type                    0\n",
       "Item_MRP                     0\n",
       "Outlet_Identifier            0\n",
       "Outlet_Establishment_Year    0\n",
       "Outlet_Size                  0\n",
       "Outlet_Location_Type         0\n",
       "Outlet_Type                  0\n",
       "Item_Outlet_Sales            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7c7236bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:58.490108Z",
     "iopub.status.busy": "2024-07-01T20:45:58.489186Z",
     "iopub.status.idle": "2024-07-01T20:45:58.581229Z",
     "shell.execute_reply": "2024-07-01T20:45:58.580157Z"
    },
    "papermill": {
     "duration": 0.107605,
     "end_time": "2024-07-01T20:45:58.583496",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.475891",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                           0\n",
       "Item_Identifier              0\n",
       "Item_Weight                  0\n",
       "Item_Fat_Content             0\n",
       "Item_Visibility              0\n",
       "Item_Type                    0\n",
       "Item_MRP                     0\n",
       "Outlet_Identifier            0\n",
       "Outlet_Establishment_Year    0\n",
       "Outlet_Size                  0\n",
       "Outlet_Location_Type         0\n",
       "Outlet_Type                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "3a390c6e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:58.610446Z",
     "iopub.status.busy": "2024-07-01T20:45:58.609477Z",
     "iopub.status.idle": "2024-07-01T20:45:58.821691Z",
     "shell.execute_reply": "2024-07-01T20:45:58.820631Z"
    },
    "papermill": {
     "duration": 0.228153,
     "end_time": "2024-07-01T20:45:58.823998",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.595845",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                0\n",
       "Item_Identifier                   0\n",
       "Item_Weight                       0\n",
       "Item_Fat_Content                  0\n",
       "Item_Visibility                   0\n",
       "Item_Type                         0\n",
       "Item_MRP                          0\n",
       "Outlet_Identifier                 0\n",
       "Outlet_Establishment_Year         0\n",
       "Outlet_Size                       0\n",
       "Outlet_Location_Type              0\n",
       "Outlet_Type                       0\n",
       "Item_Outlet_Sales            252286\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a42dc717",
   "metadata": {
    "papermill": {
     "duration": 0.012203,
     "end_time": "2024-07-01T20:45:58.848745",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.836542",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Filling in missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "24ca733a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:58.875264Z",
     "iopub.status.busy": "2024-07-01T20:45:58.874855Z",
     "iopub.status.idle": "2024-07-01T20:45:58.880309Z",
     "shell.execute_reply": "2024-07-01T20:45:58.879360Z"
    },
    "papermill": {
     "duration": 0.021652,
     "end_time": "2024-07-01T20:45:58.882902",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.861250",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['id', 'Item_Identifier', 'Item_Weight', 'Item_Fat_Content',\n",
      "       'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier',\n",
      "       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',\n",
      "       'Outlet_Type', 'Item_Outlet_Sales'],\n",
      "      dtype='object')\n",
      "Index(['id', 'Item_Identifier', 'Item_Weight', 'Item_Fat_Content',\n",
      "       'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier',\n",
      "       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',\n",
      "       'Outlet_Type'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "print(train_data.columns)\n",
    "print(test_data.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ff491e21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:58.909800Z",
     "iopub.status.busy": "2024-07-01T20:45:58.909395Z",
     "iopub.status.idle": "2024-07-01T20:45:58.914816Z",
     "shell.execute_reply": "2024-07-01T20:45:58.913632Z"
    },
    "papermill": {
     "duration": 0.021651,
     "end_time": "2024-07-01T20:45:58.917132",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.895481",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['id', 'Item_Identifier', 'Item_Weight', 'Item_Fat_Content',\n",
      "       'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier',\n",
      "       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',\n",
      "       'Outlet_Type', 'Item_Outlet_Sales'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "print(combined_data.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6cab963",
   "metadata": {
    "papermill": {
     "duration": 0.012194,
     "end_time": "2024-07-01T20:45:58.941864",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.929670",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Check and fill in missing values (if necessary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1762519f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:58.968935Z",
     "iopub.status.busy": "2024-07-01T20:45:58.968542Z",
     "iopub.status.idle": "2024-07-01T20:45:59.070737Z",
     "shell.execute_reply": "2024-07-01T20:45:59.069633Z"
    },
    "papermill": {
     "duration": 0.11852,
     "end_time": "2024-07-01T20:45:59.073227",
     "exception": false,
     "start_time": "2024-07-01T20:45:58.954707",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "combined_data['Item_Weight'] = combined_data['Item_Weight'].fillna(combined_data['Item_Weight'].mean())\n",
    "combined_data['Outlet_Size'] = combined_data['Outlet_Size'].fillna(combined_data['Outlet_Size'].mode()[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "613ea1d2",
   "metadata": {
    "papermill": {
     "duration": 0.012391,
     "end_time": "2024-07-01T20:45:59.098313",
     "exception": false,
     "start_time": "2024-07-01T20:45:59.085922",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Coding of categorical variables**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "37352bce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:45:59.126183Z",
     "iopub.status.busy": "2024-07-01T20:45:59.125661Z",
     "iopub.status.idle": "2024-07-01T20:46:01.071259Z",
     "shell.execute_reply": "2024-07-01T20:46:01.069987Z"
    },
    "papermill": {
     "duration": 1.963009,
     "end_time": "2024-07-01T20:46:01.073885",
     "exception": false,
     "start_time": "2024-07-01T20:45:59.110876",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "cat_cols = ['Item_Fat_Content', 'Item_Type', 'Outlet_Identifier', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']\n",
    "le = LabelEncoder()\n",
    "for col in cat_cols:\n",
    "    combined_data[col] = le.fit_transform(combined_data[col])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "aeb7303d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:01.161987Z",
     "iopub.status.busy": "2024-07-01T20:46:01.161577Z",
     "iopub.status.idle": "2024-07-01T20:46:01.171236Z",
     "shell.execute_reply": "2024-07-01T20:46:01.170113Z"
    },
    "papermill": {
     "duration": 0.086505,
     "end_time": "2024-07-01T20:46:01.173584",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.087079",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         1\n",
       "1         1\n",
       "2         1\n",
       "3         1\n",
       "4         1\n",
       "         ..\n",
       "630709    0\n",
       "630710    1\n",
       "630711    1\n",
       "630712    1\n",
       "630713    1\n",
       "Name: Outlet_Type, Length: 630714, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_data[col]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b557ad00",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:01.200903Z",
     "iopub.status.busy": "2024-07-01T20:46:01.200517Z",
     "iopub.status.idle": "2024-07-01T20:46:01.222903Z",
     "shell.execute_reply": "2024-07-01T20:46:01.221743Z"
    },
    "papermill": {
     "duration": 0.039198,
     "end_time": "2024-07-01T20:46:01.225699",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.186501",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>NCU06</td>\n",
       "      <td>17.600</td>\n",
       "      <td>1</td>\n",
       "      <td>0.024795</td>\n",
       "      <td>9</td>\n",
       "      <td>231.1010</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1760.43266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>FDY26</td>\n",
       "      <td>20.500</td>\n",
       "      <td>2</td>\n",
       "      <td>0.102226</td>\n",
       "      <td>4</td>\n",
       "      <td>212.6244</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101.20160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>FDK21</td>\n",
       "      <td>18.350</td>\n",
       "      <td>1</td>\n",
       "      <td>0.092238</td>\n",
       "      <td>13</td>\n",
       "      <td>250.1092</td>\n",
       "      <td>1</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2042.61550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>NCN05</td>\n",
       "      <td>12.150</td>\n",
       "      <td>1</td>\n",
       "      <td>0.043942</td>\n",
       "      <td>8</td>\n",
       "      <td>182.2950</td>\n",
       "      <td>9</td>\n",
       "      <td>1999</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3103.95960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>FDA47</td>\n",
       "      <td>10.500</td>\n",
       "      <td>2</td>\n",
       "      <td>0.042967</td>\n",
       "      <td>0</td>\n",
       "      <td>162.4210</td>\n",
       "      <td>6</td>\n",
       "      <td>2004</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>442.75700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630709</th>\n",
       "      <td>630709</td>\n",
       "      <td>FDG28</td>\n",
       "      <td>9.285</td>\n",
       "      <td>2</td>\n",
       "      <td>0.064664</td>\n",
       "      <td>5</td>\n",
       "      <td>121.2098</td>\n",
       "      <td>0</td>\n",
       "      <td>1998</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630710</th>\n",
       "      <td>630710</td>\n",
       "      <td>NCU05</td>\n",
       "      <td>10.100</td>\n",
       "      <td>1</td>\n",
       "      <td>0.058207</td>\n",
       "      <td>8</td>\n",
       "      <td>82.6908</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630711</th>\n",
       "      <td>630711</td>\n",
       "      <td>FDK09</td>\n",
       "      <td>15.200</td>\n",
       "      <td>1</td>\n",
       "      <td>0.039468</td>\n",
       "      <td>13</td>\n",
       "      <td>126.2362</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630712</th>\n",
       "      <td>630712</td>\n",
       "      <td>FDU14</td>\n",
       "      <td>17.750</td>\n",
       "      <td>1</td>\n",
       "      <td>0.041615</td>\n",
       "      <td>4</td>\n",
       "      <td>98.7384</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630713</th>\n",
       "      <td>630713</td>\n",
       "      <td>FDU47</td>\n",
       "      <td>12.100</td>\n",
       "      <td>2</td>\n",
       "      <td>0.056191</td>\n",
       "      <td>1</td>\n",
       "      <td>138.6838</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>630714 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id Item_Identifier  Item_Weight  Item_Fat_Content  \\\n",
       "0            0           NCU06       17.600                 1   \n",
       "1            1           FDY26       20.500                 2   \n",
       "2            2           FDK21       18.350                 1   \n",
       "3            3           NCN05       12.150                 1   \n",
       "4            4           FDA47       10.500                 2   \n",
       "...        ...             ...          ...               ...   \n",
       "630709  630709           FDG28        9.285                 2   \n",
       "630710  630710           NCU05       10.100                 1   \n",
       "630711  630711           FDK09       15.200                 1   \n",
       "630712  630712           FDU14       17.750                 1   \n",
       "630713  630713           FDU47       12.100                 2   \n",
       "\n",
       "        Item_Visibility  Item_Type  Item_MRP  Outlet_Identifier  \\\n",
       "0              0.024795          9  231.1010                  2   \n",
       "1              0.102226          4  212.6244                  2   \n",
       "2              0.092238         13  250.1092                  1   \n",
       "3              0.043942          8  182.2950                  9   \n",
       "4              0.042967          0  162.4210                  6   \n",
       "...                 ...        ...       ...                ...   \n",
       "630709         0.064664          5  121.2098                  0   \n",
       "630710         0.058207          8   82.6908                  7   \n",
       "630711         0.039468         13  126.2362                  7   \n",
       "630712         0.041615          4   98.7384                  7   \n",
       "630713         0.056191          1  138.6838                  7   \n",
       "\n",
       "        Outlet_Establishment_Year  Outlet_Size  Outlet_Location_Type  \\\n",
       "0                            2007            1                     1   \n",
       "1                            2007            1                     1   \n",
       "2                            1987            0                     2   \n",
       "3                            1999            1                     0   \n",
       "4                            2004            2                     1   \n",
       "...                           ...          ...                   ...   \n",
       "630709                       1998            1                     2   \n",
       "630710                       2002            2                     1   \n",
       "630711                       2002            2                     1   \n",
       "630712                       2002            2                     1   \n",
       "630713                       2002            2                     1   \n",
       "\n",
       "        Outlet_Type  Item_Outlet_Sales  \n",
       "0                 1         1760.43266  \n",
       "1                 1          101.20160  \n",
       "2                 1         2042.61550  \n",
       "3                 1         3103.95960  \n",
       "4                 1          442.75700  \n",
       "...             ...                ...  \n",
       "630709            0                NaN  \n",
       "630710            1                NaN  \n",
       "630711            1                NaN  \n",
       "630712            1                NaN  \n",
       "630713            1                NaN  \n",
       "\n",
       "[630714 rows x 13 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b2c178d",
   "metadata": {
    "papermill": {
     "duration": 0.018311,
     "end_time": "2024-07-01T20:46:01.257355",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.239044",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let's calculate unique values and duplicates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f16a897e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:01.289763Z",
     "iopub.status.busy": "2024-07-01T20:46:01.288531Z",
     "iopub.status.idle": "2024-07-01T20:46:01.338459Z",
     "shell.execute_reply": "2024-07-01T20:46:01.337244Z"
    },
    "papermill": {
     "duration": 0.067681,
     "end_time": "2024-07-01T20:46:01.340811",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.273130",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unique values in 'Item_Identifier': 1559\n",
      "Repeated values in 'Item_Identifier': 629155\n"
     ]
    }
   ],
   "source": [
    "unique_item_identifiers = combined_data['Item_Identifier'].unique()\n",
    "num_unique = len(unique_item_identifiers)\n",
    "num_total = combined_data.shape[0]\n",
    "\n",
    "num_duplicates = num_total - num_unique\n",
    "\n",
    "print(f\"Unique values in 'Item_Identifier': {num_unique}\")\n",
    "print(f\"Repeated values in 'Item_Identifier': {num_duplicates}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc2c3d5a",
   "metadata": {
    "papermill": {
     "duration": 0.013142,
     "end_time": "2024-07-01T20:46:01.367695",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.354553",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let's coding our variables in Item)Identifier column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d1333fbe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:01.396396Z",
     "iopub.status.busy": "2024-07-01T20:46:01.395977Z",
     "iopub.status.idle": "2024-07-01T20:46:01.454303Z",
     "shell.execute_reply": "2024-07-01T20:46:01.452963Z"
    },
    "papermill": {
     "duration": 0.07574,
     "end_time": "2024-07-01T20:46:01.456913",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.381173",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "combined_data['Item_Identifier'] = combined_data['Item_Identifier'].astype('category').cat.codes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "9af2e5ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:01.487318Z",
     "iopub.status.busy": "2024-07-01T20:46:01.486877Z",
     "iopub.status.idle": "2024-07-01T20:46:01.507107Z",
     "shell.execute_reply": "2024-07-01T20:46:01.505901Z"
    },
    "papermill": {
     "duration": 0.038751,
     "end_time": "2024-07-01T20:46:01.509457",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.470706",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1500</td>\n",
       "      <td>17.600</td>\n",
       "      <td>1</td>\n",
       "      <td>0.024795</td>\n",
       "      <td>9</td>\n",
       "      <td>231.1010</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1760.43266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1187</td>\n",
       "      <td>20.500</td>\n",
       "      <td>2</td>\n",
       "      <td>0.102226</td>\n",
       "      <td>4</td>\n",
       "      <td>212.6244</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101.20160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>553</td>\n",
       "      <td>18.350</td>\n",
       "      <td>1</td>\n",
       "      <td>0.092238</td>\n",
       "      <td>13</td>\n",
       "      <td>250.1092</td>\n",
       "      <td>1</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2042.61550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1405</td>\n",
       "      <td>12.150</td>\n",
       "      <td>1</td>\n",
       "      <td>0.043942</td>\n",
       "      <td>8</td>\n",
       "      <td>182.2950</td>\n",
       "      <td>9</td>\n",
       "      <td>1999</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3103.95960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>181</td>\n",
       "      <td>10.500</td>\n",
       "      <td>2</td>\n",
       "      <td>0.042967</td>\n",
       "      <td>0</td>\n",
       "      <td>162.4210</td>\n",
       "      <td>6</td>\n",
       "      <td>2004</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>442.75700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630709</th>\n",
       "      <td>630709</td>\n",
       "      <td>409</td>\n",
       "      <td>9.285</td>\n",
       "      <td>2</td>\n",
       "      <td>0.064664</td>\n",
       "      <td>5</td>\n",
       "      <td>121.2098</td>\n",
       "      <td>0</td>\n",
       "      <td>1998</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630710</th>\n",
       "      <td>630710</td>\n",
       "      <td>1499</td>\n",
       "      <td>10.100</td>\n",
       "      <td>1</td>\n",
       "      <td>0.058207</td>\n",
       "      <td>8</td>\n",
       "      <td>82.6908</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630711</th>\n",
       "      <td>630711</td>\n",
       "      <td>547</td>\n",
       "      <td>15.200</td>\n",
       "      <td>1</td>\n",
       "      <td>0.039468</td>\n",
       "      <td>13</td>\n",
       "      <td>126.2362</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630712</th>\n",
       "      <td>630712</td>\n",
       "      <td>978</td>\n",
       "      <td>17.750</td>\n",
       "      <td>1</td>\n",
       "      <td>0.041615</td>\n",
       "      <td>4</td>\n",
       "      <td>98.7384</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630713</th>\n",
       "      <td>630713</td>\n",
       "      <td>1005</td>\n",
       "      <td>12.100</td>\n",
       "      <td>2</td>\n",
       "      <td>0.056191</td>\n",
       "      <td>1</td>\n",
       "      <td>138.6838</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>630714 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id  Item_Identifier  Item_Weight  Item_Fat_Content  \\\n",
       "0            0             1500       17.600                 1   \n",
       "1            1             1187       20.500                 2   \n",
       "2            2              553       18.350                 1   \n",
       "3            3             1405       12.150                 1   \n",
       "4            4              181       10.500                 2   \n",
       "...        ...              ...          ...               ...   \n",
       "630709  630709              409        9.285                 2   \n",
       "630710  630710             1499       10.100                 1   \n",
       "630711  630711              547       15.200                 1   \n",
       "630712  630712              978       17.750                 1   \n",
       "630713  630713             1005       12.100                 2   \n",
       "\n",
       "        Item_Visibility  Item_Type  Item_MRP  Outlet_Identifier  \\\n",
       "0              0.024795          9  231.1010                  2   \n",
       "1              0.102226          4  212.6244                  2   \n",
       "2              0.092238         13  250.1092                  1   \n",
       "3              0.043942          8  182.2950                  9   \n",
       "4              0.042967          0  162.4210                  6   \n",
       "...                 ...        ...       ...                ...   \n",
       "630709         0.064664          5  121.2098                  0   \n",
       "630710         0.058207          8   82.6908                  7   \n",
       "630711         0.039468         13  126.2362                  7   \n",
       "630712         0.041615          4   98.7384                  7   \n",
       "630713         0.056191          1  138.6838                  7   \n",
       "\n",
       "        Outlet_Establishment_Year  Outlet_Size  Outlet_Location_Type  \\\n",
       "0                            2007            1                     1   \n",
       "1                            2007            1                     1   \n",
       "2                            1987            0                     2   \n",
       "3                            1999            1                     0   \n",
       "4                            2004            2                     1   \n",
       "...                           ...          ...                   ...   \n",
       "630709                       1998            1                     2   \n",
       "630710                       2002            2                     1   \n",
       "630711                       2002            2                     1   \n",
       "630712                       2002            2                     1   \n",
       "630713                       2002            2                     1   \n",
       "\n",
       "        Outlet_Type  Item_Outlet_Sales  \n",
       "0                 1         1760.43266  \n",
       "1                 1          101.20160  \n",
       "2                 1         2042.61550  \n",
       "3                 1         3103.95960  \n",
       "4                 1          442.75700  \n",
       "...             ...                ...  \n",
       "630709            0                NaN  \n",
       "630710            1                NaN  \n",
       "630711            1                NaN  \n",
       "630712            1                NaN  \n",
       "630713            1                NaN  \n",
       "\n",
       "[630714 rows x 13 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3de32595",
   "metadata": {
    "papermill": {
     "duration": 0.014359,
     "end_time": "2024-07-01T20:46:01.540825",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.526466",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Scale number data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "759627b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:01.571431Z",
     "iopub.status.busy": "2024-07-01T20:46:01.571031Z",
     "iopub.status.idle": "2024-07-01T20:46:01.624976Z",
     "shell.execute_reply": "2024-07-01T20:46:01.623676Z"
    },
    "papermill": {
     "duration": 0.072661,
     "end_time": "2024-07-01T20:46:01.627582",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.554921",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "scaler = StandardScaler()\n",
    "numerical_features = ['Item_Weight', 'Item_Visibility', 'Item_MRP']\n",
    "combined_data[numerical_features] = scaler.fit_transform(combined_data[numerical_features])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "3ba7eed6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:01.657069Z",
     "iopub.status.busy": "2024-07-01T20:46:01.656677Z",
     "iopub.status.idle": "2024-07-01T20:46:01.675148Z",
     "shell.execute_reply": "2024-07-01T20:46:01.674025Z"
    },
    "papermill": {
     "duration": 0.036234,
     "end_time": "2024-07-01T20:46:01.677727",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.641493",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1500</td>\n",
       "      <td>1.037592</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.633790</td>\n",
       "      <td>9</td>\n",
       "      <td>1.528122</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1760.43266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1187</td>\n",
       "      <td>1.665566</td>\n",
       "      <td>2</td>\n",
       "      <td>1.016356</td>\n",
       "      <td>4</td>\n",
       "      <td>1.225407</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101.20160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>553</td>\n",
       "      <td>1.199999</td>\n",
       "      <td>1</td>\n",
       "      <td>0.803495</td>\n",
       "      <td>13</td>\n",
       "      <td>1.839547</td>\n",
       "      <td>1</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2042.61550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1405</td>\n",
       "      <td>-0.142565</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.225749</td>\n",
       "      <td>8</td>\n",
       "      <td>0.728499</td>\n",
       "      <td>9</td>\n",
       "      <td>1999</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3103.95960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>181</td>\n",
       "      <td>-0.499860</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.246537</td>\n",
       "      <td>0</td>\n",
       "      <td>0.402889</td>\n",
       "      <td>6</td>\n",
       "      <td>2004</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>442.75700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630709</th>\n",
       "      <td>630709</td>\n",
       "      <td>409</td>\n",
       "      <td>-0.762960</td>\n",
       "      <td>2</td>\n",
       "      <td>0.215849</td>\n",
       "      <td>5</td>\n",
       "      <td>-0.272304</td>\n",
       "      <td>0</td>\n",
       "      <td>1998</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630710</th>\n",
       "      <td>630710</td>\n",
       "      <td>1499</td>\n",
       "      <td>-0.586477</td>\n",
       "      <td>1</td>\n",
       "      <td>0.078256</td>\n",
       "      <td>8</td>\n",
       "      <td>-0.903388</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630711</th>\n",
       "      <td>630711</td>\n",
       "      <td>547</td>\n",
       "      <td>0.517890</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.321104</td>\n",
       "      <td>13</td>\n",
       "      <td>-0.189953</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630712</th>\n",
       "      <td>630712</td>\n",
       "      <td>978</td>\n",
       "      <td>1.070074</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.275334</td>\n",
       "      <td>4</td>\n",
       "      <td>-0.640469</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>630713</th>\n",
       "      <td>630713</td>\n",
       "      <td>1005</td>\n",
       "      <td>-0.153392</td>\n",
       "      <td>2</td>\n",
       "      <td>0.035297</td>\n",
       "      <td>1</td>\n",
       "      <td>0.013985</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>630714 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id  Item_Identifier  Item_Weight  Item_Fat_Content  \\\n",
       "0            0             1500     1.037592                 1   \n",
       "1            1             1187     1.665566                 2   \n",
       "2            2              553     1.199999                 1   \n",
       "3            3             1405    -0.142565                 1   \n",
       "4            4              181    -0.499860                 2   \n",
       "...        ...              ...          ...               ...   \n",
       "630709  630709              409    -0.762960                 2   \n",
       "630710  630710             1499    -0.586477                 1   \n",
       "630711  630711              547     0.517890                 1   \n",
       "630712  630712              978     1.070074                 1   \n",
       "630713  630713             1005    -0.153392                 2   \n",
       "\n",
       "        Item_Visibility  Item_Type  Item_MRP  Outlet_Identifier  \\\n",
       "0             -0.633790          9  1.528122                  2   \n",
       "1              1.016356          4  1.225407                  2   \n",
       "2              0.803495         13  1.839547                  1   \n",
       "3             -0.225749          8  0.728499                  9   \n",
       "4             -0.246537          0  0.402889                  6   \n",
       "...                 ...        ...       ...                ...   \n",
       "630709         0.215849          5 -0.272304                  0   \n",
       "630710         0.078256          8 -0.903388                  7   \n",
       "630711        -0.321104         13 -0.189953                  7   \n",
       "630712        -0.275334          4 -0.640469                  7   \n",
       "630713         0.035297          1  0.013985                  7   \n",
       "\n",
       "        Outlet_Establishment_Year  Outlet_Size  Outlet_Location_Type  \\\n",
       "0                            2007            1                     1   \n",
       "1                            2007            1                     1   \n",
       "2                            1987            0                     2   \n",
       "3                            1999            1                     0   \n",
       "4                            2004            2                     1   \n",
       "...                           ...          ...                   ...   \n",
       "630709                       1998            1                     2   \n",
       "630710                       2002            2                     1   \n",
       "630711                       2002            2                     1   \n",
       "630712                       2002            2                     1   \n",
       "630713                       2002            2                     1   \n",
       "\n",
       "        Outlet_Type  Item_Outlet_Sales  \n",
       "0                 1         1760.43266  \n",
       "1                 1          101.20160  \n",
       "2                 1         2042.61550  \n",
       "3                 1         3103.95960  \n",
       "4                 1          442.75700  \n",
       "...             ...                ...  \n",
       "630709            0                NaN  \n",
       "630710            1                NaN  \n",
       "630711            1                NaN  \n",
       "630712            1                NaN  \n",
       "630713            1                NaN  \n",
       "\n",
       "[630714 rows x 13 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42c33940",
   "metadata": {
    "papermill": {
     "duration": 0.014105,
     "end_time": "2024-07-01T20:46:01.706725",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.692620",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Building the model**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e0e8949",
   "metadata": {
    "papermill": {
     "duration": 0.014166,
     "end_time": "2024-07-01T20:46:01.735139",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.720973",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let's import libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8e14f2d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:01.767602Z",
     "iopub.status.busy": "2024-07-01T20:46:01.767216Z",
     "iopub.status.idle": "2024-07-01T20:46:02.405377Z",
     "shell.execute_reply": "2024-07-01T20:46:02.404386Z"
    },
    "papermill": {
     "duration": 0.656646,
     "end_time": "2024-07-01T20:46:02.407945",
     "exception": false,
     "start_time": "2024-07-01T20:46:01.751299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from xgboost import XGBRegressor\n",
    "from sklearn.metrics import mean_squared_log_error"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87213e5b",
   "metadata": {
    "papermill": {
     "duration": 0.013764,
     "end_time": "2024-07-01T20:46:02.436696",
     "exception": false,
     "start_time": "2024-07-01T20:46:02.422932",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Separate train and test data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2d112201",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:02.467323Z",
     "iopub.status.busy": "2024-07-01T20:46:02.466233Z",
     "iopub.status.idle": "2024-07-01T20:46:02.472326Z",
     "shell.execute_reply": "2024-07-01T20:46:02.471130Z"
    },
    "papermill": {
     "duration": 0.023673,
     "end_time": "2024-07-01T20:46:02.474515",
     "exception": false,
     "start_time": "2024-07-01T20:46:02.450842",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_data_scaled = combined_data.iloc[:len(train_data), :]\n",
    "test_data_scaled = combined_data.iloc[len(train_data):, :]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b9e6db18",
   "metadata": {
    "papermill": {
     "duration": 0.013945,
     "end_time": "2024-07-01T20:46:02.502970",
     "exception": false,
     "start_time": "2024-07-01T20:46:02.489025",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Split the training data into training and validation sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "fe8c73f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:02.534721Z",
     "iopub.status.busy": "2024-07-01T20:46:02.533957Z",
     "iopub.status.idle": "2024-07-01T20:46:02.657030Z",
     "shell.execute_reply": "2024-07-01T20:46:02.655803Z"
    },
    "papermill": {
     "duration": 0.14251,
     "end_time": "2024-07-01T20:46:02.659583",
     "exception": false,
     "start_time": "2024-07-01T20:46:02.517073",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = train_data_scaled.drop('Item_Outlet_Sales', axis=1)\n",
    "y = train_data_scaled['Item_Outlet_Sales']\n",
    "X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3146c5c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:02.690984Z",
     "iopub.status.busy": "2024-07-01T20:46:02.690285Z",
     "iopub.status.idle": "2024-07-01T20:46:02.707233Z",
     "shell.execute_reply": "2024-07-01T20:46:02.706007Z"
    },
    "papermill": {
     "duration": 0.034783,
     "end_time": "2024-07-01T20:46:02.709506",
     "exception": false,
     "start_time": "2024-07-01T20:46:02.674723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1500</td>\n",
       "      <td>1.037592</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.633790</td>\n",
       "      <td>9</td>\n",
       "      <td>1.528122</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1187</td>\n",
       "      <td>1.665566</td>\n",
       "      <td>2</td>\n",
       "      <td>1.016356</td>\n",
       "      <td>4</td>\n",
       "      <td>1.225407</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>553</td>\n",
       "      <td>1.199999</td>\n",
       "      <td>1</td>\n",
       "      <td>0.803495</td>\n",
       "      <td>13</td>\n",
       "      <td>1.839547</td>\n",
       "      <td>1</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1405</td>\n",
       "      <td>-0.142565</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.225749</td>\n",
       "      <td>8</td>\n",
       "      <td>0.728499</td>\n",
       "      <td>9</td>\n",
       "      <td>1999</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>181</td>\n",
       "      <td>-0.499860</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.246537</td>\n",
       "      <td>0</td>\n",
       "      <td>0.402889</td>\n",
       "      <td>6</td>\n",
       "      <td>2004</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378423</th>\n",
       "      <td>378423</td>\n",
       "      <td>195</td>\n",
       "      <td>0.528717</td>\n",
       "      <td>1</td>\n",
       "      <td>1.054735</td>\n",
       "      <td>4</td>\n",
       "      <td>0.040717</td>\n",
       "      <td>6</td>\n",
       "      <td>2004</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378424</th>\n",
       "      <td>378424</td>\n",
       "      <td>1026</td>\n",
       "      <td>0.842704</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.759306</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.807370</td>\n",
       "      <td>1</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378425</th>\n",
       "      <td>378425</td>\n",
       "      <td>750</td>\n",
       "      <td>0.063150</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.150299</td>\n",
       "      <td>5</td>\n",
       "      <td>1.290254</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378426</th>\n",
       "      <td>378426</td>\n",
       "      <td>868</td>\n",
       "      <td>-0.847411</td>\n",
       "      <td>1</td>\n",
       "      <td>1.438086</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.419312</td>\n",
       "      <td>3</td>\n",
       "      <td>2009</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378427</th>\n",
       "      <td>378427</td>\n",
       "      <td>1500</td>\n",
       "      <td>1.124209</td>\n",
       "      <td>1</td>\n",
       "      <td>0.258396</td>\n",
       "      <td>9</td>\n",
       "      <td>0.304154</td>\n",
       "      <td>1</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>378428 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id  Item_Identifier  Item_Weight  Item_Fat_Content  \\\n",
       "0            0             1500     1.037592                 1   \n",
       "1            1             1187     1.665566                 2   \n",
       "2            2              553     1.199999                 1   \n",
       "3            3             1405    -0.142565                 1   \n",
       "4            4              181    -0.499860                 2   \n",
       "...        ...              ...          ...               ...   \n",
       "378423  378423              195     0.528717                 1   \n",
       "378424  378424             1026     0.842704                 2   \n",
       "378425  378425              750     0.063150                 1   \n",
       "378426  378426              868    -0.847411                 1   \n",
       "378427  378427             1500     1.124209                 1   \n",
       "\n",
       "        Item_Visibility  Item_Type  Item_MRP  Outlet_Identifier  \\\n",
       "0             -0.633790          9  1.528122                  2   \n",
       "1              1.016356          4  1.225407                  2   \n",
       "2              0.803495         13  1.839547                  1   \n",
       "3             -0.225749          8  0.728499                  9   \n",
       "4             -0.246537          0  0.402889                  6   \n",
       "...                 ...        ...       ...                ...   \n",
       "378423         1.054735          4  0.040717                  6   \n",
       "378424        -0.759306          0 -0.807370                  1   \n",
       "378425        -0.150299          5  1.290254                  7   \n",
       "378426         1.438086          2 -1.419312                  3   \n",
       "378427         0.258396          9  0.304154                  1   \n",
       "\n",
       "        Outlet_Establishment_Year  Outlet_Size  Outlet_Location_Type  \\\n",
       "0                            2007            1                     1   \n",
       "1                            2007            1                     1   \n",
       "2                            1987            0                     2   \n",
       "3                            1999            1                     0   \n",
       "4                            2004            2                     1   \n",
       "...                           ...          ...                   ...   \n",
       "378423                       2004            2                     1   \n",
       "378424                       1987            0                     2   \n",
       "378425                       2002            2                     1   \n",
       "378426                       2009            1                     2   \n",
       "378427                       1987            0                     2   \n",
       "\n",
       "        Outlet_Type  \n",
       "0                 1  \n",
       "1                 1  \n",
       "2                 1  \n",
       "3                 1  \n",
       "4                 1  \n",
       "...             ...  \n",
       "378423            1  \n",
       "378424            1  \n",
       "378425            1  \n",
       "378426            2  \n",
       "378427            1  \n",
       "\n",
       "[378428 rows x 12 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b292666f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:02.741127Z",
     "iopub.status.busy": "2024-07-01T20:46:02.740298Z",
     "iopub.status.idle": "2024-07-01T20:46:02.748547Z",
     "shell.execute_reply": "2024-07-01T20:46:02.747495Z"
    },
    "papermill": {
     "duration": 0.026685,
     "end_time": "2024-07-01T20:46:02.750791",
     "exception": false,
     "start_time": "2024-07-01T20:46:02.724106",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         1760.43266\n",
       "1          101.20160\n",
       "2         2042.61550\n",
       "3         3103.95960\n",
       "4          442.75700\n",
       "             ...    \n",
       "378423    1544.65600\n",
       "378424    1745.07239\n",
       "378425    3918.89880\n",
       "378426     703.08480\n",
       "378427    2656.54200\n",
       "Name: Item_Outlet_Sales, Length: 378428, dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dba06895",
   "metadata": {
    "papermill": {
     "duration": 0.014561,
     "end_time": "2024-07-01T20:46:02.780132",
     "exception": false,
     "start_time": "2024-07-01T20:46:02.765571",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Create and train our model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "ecfb3184",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:46:02.811276Z",
     "iopub.status.busy": "2024-07-01T20:46:02.810881Z",
     "iopub.status.idle": "2024-07-01T20:51:12.767624Z",
     "shell.execute_reply": "2024-07-01T20:51:12.766506Z"
    },
    "papermill": {
     "duration": 309.990703,
     "end_time": "2024-07-01T20:51:12.785445",
     "exception": false,
     "start_time": "2024-07-01T20:46:02.794742",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(random_state=42)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = RandomForestRegressor(n_estimators=100, random_state=42)\n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "03d4c913",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:12.818807Z",
     "iopub.status.busy": "2024-07-01T20:51:12.818029Z",
     "iopub.status.idle": "2024-07-01T20:51:12.822792Z",
     "shell.execute_reply": "2024-07-01T20:51:12.821741Z"
    },
    "papermill": {
     "duration": 0.023373,
     "end_time": "2024-07-01T20:51:12.825027",
     "exception": false,
     "start_time": "2024-07-01T20:51:12.801654",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#model = XGBRegressor(n_estimators=100, random_state=42)\n",
    "#model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "9d49d36b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:12.856672Z",
     "iopub.status.busy": "2024-07-01T20:51:12.856313Z",
     "iopub.status.idle": "2024-07-01T20:51:12.863940Z",
     "shell.execute_reply": "2024-07-01T20:51:12.862850Z"
    },
    "papermill": {
     "duration": 0.026163,
     "end_time": "2024-07-01T20:51:12.866159",
     "exception": false,
     "start_time": "2024-07-01T20:51:12.839996",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(random_state=42)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "35d77559",
   "metadata": {
    "papermill": {
     "duration": 0.014818,
     "end_time": "2024-07-01T20:51:12.896388",
     "exception": false,
     "start_time": "2024-07-01T20:51:12.881570",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Prediction on the validation set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "b61bf62f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:12.928145Z",
     "iopub.status.busy": "2024-07-01T20:51:12.927744Z",
     "iopub.status.idle": "2024-07-01T20:51:18.406728Z",
     "shell.execute_reply": "2024-07-01T20:51:18.405610Z"
    },
    "papermill": {
     "duration": 5.498027,
     "end_time": "2024-07-01T20:51:18.409519",
     "exception": false,
     "start_time": "2024-07-01T20:51:12.911492",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_pred = model.predict(X_val)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ec330a2",
   "metadata": {
    "papermill": {
     "duration": 0.015585,
     "end_time": "2024-07-01T20:51:18.441337",
     "exception": false,
     "start_time": "2024-07-01T20:51:18.425752",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Evaluation of the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "b97ddf94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:18.473478Z",
     "iopub.status.busy": "2024-07-01T20:51:18.473068Z",
     "iopub.status.idle": "2024-07-01T20:51:18.483995Z",
     "shell.execute_reply": "2024-07-01T20:51:18.482817Z"
    },
    "papermill": {
     "duration": 0.02987,
     "end_time": "2024-07-01T20:51:18.486276",
     "exception": false,
     "start_time": "2024-07-01T20:51:18.456406",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSLE: 0.7600541615304126\n"
     ]
    }
   ],
   "source": [
    "rmsle = np.sqrt(mean_squared_log_error(y_val, y_pred))\n",
    "print('RMSLE:', rmsle)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9827400",
   "metadata": {
    "papermill": {
     "duration": 0.014916,
     "end_time": "2024-07-01T20:51:18.516354",
     "exception": false,
     "start_time": "2024-07-01T20:51:18.501438",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Prepare test dataset for prediction**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "9a2ac185",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:18.548764Z",
     "iopub.status.busy": "2024-07-01T20:51:18.548374Z",
     "iopub.status.idle": "2024-07-01T20:51:18.567680Z",
     "shell.execute_reply": "2024-07-01T20:51:18.566656Z"
    },
    "papermill": {
     "duration": 0.038311,
     "end_time": "2024-07-01T20:51:18.569820",
     "exception": false,
     "start_time": "2024-07-01T20:51:18.531509",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>378428</td>\n",
       "      <td>FDP45</td>\n",
       "      <td>15.700</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.074779</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>256.1014</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>378429</td>\n",
       "      <td>FDY44</td>\n",
       "      <td>14.150</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.024821</td>\n",
       "      <td>Fruits and Vegetables</td>\n",
       "      <td>196.4110</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>378430</td>\n",
       "      <td>NCV29</td>\n",
       "      <td>11.800</td>\n",
       "      <td>LF</td>\n",
       "      <td>0.032813</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>177.6686</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>378431</td>\n",
       "      <td>FDG53</td>\n",
       "      <td>10.000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.087646</td>\n",
       "      <td>Frozen Foods</td>\n",
       "      <td>138.6838</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>378432</td>\n",
       "      <td>NCB18</td>\n",
       "      <td>19.600</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Household</td>\n",
       "      <td>89.7514</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252281</th>\n",
       "      <td>630709</td>\n",
       "      <td>FDG28</td>\n",
       "      <td>9.285</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.064664</td>\n",
       "      <td>Frozen Foods</td>\n",
       "      <td>121.2098</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252282</th>\n",
       "      <td>630710</td>\n",
       "      <td>NCU05</td>\n",
       "      <td>10.100</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.058207</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>82.6908</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252283</th>\n",
       "      <td>630711</td>\n",
       "      <td>FDK09</td>\n",
       "      <td>15.200</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.039468</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>126.2362</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252284</th>\n",
       "      <td>630712</td>\n",
       "      <td>FDU14</td>\n",
       "      <td>17.750</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.041615</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>98.7384</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252285</th>\n",
       "      <td>630713</td>\n",
       "      <td>FDU47</td>\n",
       "      <td>12.100</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.056191</td>\n",
       "      <td>Breads</td>\n",
       "      <td>138.6838</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252286 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0       378428           FDP45       15.700          Low Fat         0.074779   \n",
       "1       378429           FDY44       14.150          Regular         0.024821   \n",
       "2       378430           NCV29       11.800               LF         0.032813   \n",
       "3       378431           FDG53       10.000          Low Fat         0.087646   \n",
       "4       378432           NCB18       19.600          Low Fat         0.000000   \n",
       "...        ...             ...          ...              ...              ...   \n",
       "252281  630709           FDG28        9.285          Regular         0.064664   \n",
       "252282  630710           NCU05       10.100          Low Fat         0.058207   \n",
       "252283  630711           FDK09       15.200          Low Fat         0.039468   \n",
       "252284  630712           FDU14       17.750          Low Fat         0.041615   \n",
       "252285  630713           FDU47       12.100          Regular         0.056191   \n",
       "\n",
       "                    Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0                 Snack Foods  256.1014            OUT049   \n",
       "1       Fruits and Vegetables  196.4110            OUT017   \n",
       "2          Health and Hygiene  177.6686            OUT013   \n",
       "3                Frozen Foods  138.6838            OUT017   \n",
       "4                   Household   89.7514            OUT049   \n",
       "...                       ...       ...               ...   \n",
       "252281           Frozen Foods  121.2098            OUT010   \n",
       "252282     Health and Hygiene   82.6908            OUT045   \n",
       "252283            Snack Foods  126.2362            OUT045   \n",
       "252284                  Dairy   98.7384            OUT045   \n",
       "252285                 Breads  138.6838            OUT045   \n",
       "\n",
       "        Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                            1999      Medium               Tier 1   \n",
       "1                            2007      Medium               Tier 2   \n",
       "2                            1987        High               Tier 3   \n",
       "3                            2007      Medium               Tier 2   \n",
       "4                            1999      Medium               Tier 1   \n",
       "...                           ...         ...                  ...   \n",
       "252281                       1998      Medium               Tier 3   \n",
       "252282                       2002       Small               Tier 2   \n",
       "252283                       2002       Small               Tier 2   \n",
       "252284                       2002       Small               Tier 2   \n",
       "252285                       2002       Small               Tier 2   \n",
       "\n",
       "              Outlet_Type  \n",
       "0       Supermarket Type1  \n",
       "1       Supermarket Type1  \n",
       "2       Supermarket Type1  \n",
       "3       Supermarket Type1  \n",
       "4       Supermarket Type1  \n",
       "...                   ...  \n",
       "252281      Grocery Store  \n",
       "252282  Supermarket Type1  \n",
       "252283  Supermarket Type1  \n",
       "252284  Supermarket Type1  \n",
       "252285  Supermarket Type1  \n",
       "\n",
       "[252286 rows x 12 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "8f6cb547",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:18.603395Z",
     "iopub.status.busy": "2024-07-01T20:51:18.602423Z",
     "iopub.status.idle": "2024-07-01T20:51:18.902787Z",
     "shell.execute_reply": "2024-07-01T20:51:18.901825Z"
    },
    "papermill": {
     "duration": 0.319791,
     "end_time": "2024-07-01T20:51:18.905305",
     "exception": false,
     "start_time": "2024-07-01T20:51:18.585514",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "cat_cols = ['Item_Fat_Content', 'Item_Type', 'Outlet_Identifier', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']\n",
    "le = LabelEncoder()\n",
    "for col in cat_cols:\n",
    "    test_data[col] = le.fit_transform(test_data[col])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "5356bc25",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:18.937832Z",
     "iopub.status.busy": "2024-07-01T20:51:18.937449Z",
     "iopub.status.idle": "2024-07-01T20:51:18.963499Z",
     "shell.execute_reply": "2024-07-01T20:51:18.962437Z"
    },
    "papermill": {
     "duration": 0.045119,
     "end_time": "2024-07-01T20:51:18.965947",
     "exception": false,
     "start_time": "2024-07-01T20:51:18.920828",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_data['Item_Identifier'] = test_data['Item_Identifier'].astype('category').cat.codes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d045c2f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:18.998698Z",
     "iopub.status.busy": "2024-07-01T20:51:18.998310Z",
     "iopub.status.idle": "2024-07-01T20:51:19.017390Z",
     "shell.execute_reply": "2024-07-01T20:51:19.016255Z"
    },
    "papermill": {
     "duration": 0.038748,
     "end_time": "2024-07-01T20:51:19.020309",
     "exception": false,
     "start_time": "2024-07-01T20:51:18.981561",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_scaler = StandardScaler()\n",
    "numerical_features = ['Item_Weight', 'Item_Visibility', 'Item_MRP']\n",
    "test_data[numerical_features] = test_scaler.fit_transform(test_data[numerical_features])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "3b5dbe03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:19.054857Z",
     "iopub.status.busy": "2024-07-01T20:51:19.053418Z",
     "iopub.status.idle": "2024-07-01T20:51:19.071257Z",
     "shell.execute_reply": "2024-07-01T20:51:19.070064Z"
    },
    "papermill": {
     "duration": 0.036992,
     "end_time": "2024-07-01T20:51:19.073576",
     "exception": false,
     "start_time": "2024-07-01T20:51:19.036584",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>378428</td>\n",
       "      <td>764</td>\n",
       "      <td>0.623810</td>\n",
       "      <td>1</td>\n",
       "      <td>0.431183</td>\n",
       "      <td>13</td>\n",
       "      <td>1.933301</td>\n",
       "      <td>9</td>\n",
       "      <td>1999</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>378429</td>\n",
       "      <td>1201</td>\n",
       "      <td>0.288132</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.632043</td>\n",
       "      <td>6</td>\n",
       "      <td>0.956732</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>378430</td>\n",
       "      <td>1513</td>\n",
       "      <td>-0.220798</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.461965</td>\n",
       "      <td>8</td>\n",
       "      <td>0.650095</td>\n",
       "      <td>1</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>378431</td>\n",
       "      <td>425</td>\n",
       "      <td>-0.610617</td>\n",
       "      <td>1</td>\n",
       "      <td>0.705038</td>\n",
       "      <td>5</td>\n",
       "      <td>0.012282</td>\n",
       "      <td>2</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>378432</td>\n",
       "      <td>1276</td>\n",
       "      <td>1.468418</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.160307</td>\n",
       "      <td>9</td>\n",
       "      <td>-0.788280</td>\n",
       "      <td>9</td>\n",
       "      <td>1999</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252281</th>\n",
       "      <td>630709</td>\n",
       "      <td>409</td>\n",
       "      <td>-0.765462</td>\n",
       "      <td>2</td>\n",
       "      <td>0.215908</td>\n",
       "      <td>5</td>\n",
       "      <td>-0.273603</td>\n",
       "      <td>0</td>\n",
       "      <td>1998</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252282</th>\n",
       "      <td>630710</td>\n",
       "      <td>1499</td>\n",
       "      <td>-0.588960</td>\n",
       "      <td>1</td>\n",
       "      <td>0.078498</td>\n",
       "      <td>8</td>\n",
       "      <td>-0.903796</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252283</th>\n",
       "      <td>630711</td>\n",
       "      <td>547</td>\n",
       "      <td>0.515527</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.320332</td>\n",
       "      <td>13</td>\n",
       "      <td>-0.191368</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252284</th>\n",
       "      <td>630712</td>\n",
       "      <td>978</td>\n",
       "      <td>1.067770</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.274623</td>\n",
       "      <td>4</td>\n",
       "      <td>-0.641248</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252285</th>\n",
       "      <td>630713</td>\n",
       "      <td>1005</td>\n",
       "      <td>-0.155828</td>\n",
       "      <td>2</td>\n",
       "      <td>0.035596</td>\n",
       "      <td>1</td>\n",
       "      <td>0.012282</td>\n",
       "      <td>7</td>\n",
       "      <td>2002</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252286 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id  Item_Identifier  Item_Weight  Item_Fat_Content  \\\n",
       "0       378428              764     0.623810                 1   \n",
       "1       378429             1201     0.288132                 2   \n",
       "2       378430             1513    -0.220798                 0   \n",
       "3       378431              425    -0.610617                 1   \n",
       "4       378432             1276     1.468418                 1   \n",
       "...        ...              ...          ...               ...   \n",
       "252281  630709              409    -0.765462                 2   \n",
       "252282  630710             1499    -0.588960                 1   \n",
       "252283  630711              547     0.515527                 1   \n",
       "252284  630712              978     1.067770                 1   \n",
       "252285  630713             1005    -0.155828                 2   \n",
       "\n",
       "        Item_Visibility  Item_Type  Item_MRP  Outlet_Identifier  \\\n",
       "0              0.431183         13  1.933301                  9   \n",
       "1             -0.632043          6  0.956732                  2   \n",
       "2             -0.461965          8  0.650095                  1   \n",
       "3              0.705038          5  0.012282                  2   \n",
       "4             -1.160307          9 -0.788280                  9   \n",
       "...                 ...        ...       ...                ...   \n",
       "252281         0.215908          5 -0.273603                  0   \n",
       "252282         0.078498          8 -0.903796                  7   \n",
       "252283        -0.320332         13 -0.191368                  7   \n",
       "252284        -0.274623          4 -0.641248                  7   \n",
       "252285         0.035596          1  0.012282                  7   \n",
       "\n",
       "        Outlet_Establishment_Year  Outlet_Size  Outlet_Location_Type  \\\n",
       "0                            1999            1                     0   \n",
       "1                            2007            1                     1   \n",
       "2                            1987            0                     2   \n",
       "3                            2007            1                     1   \n",
       "4                            1999            1                     0   \n",
       "...                           ...          ...                   ...   \n",
       "252281                       1998            1                     2   \n",
       "252282                       2002            2                     1   \n",
       "252283                       2002            2                     1   \n",
       "252284                       2002            2                     1   \n",
       "252285                       2002            2                     1   \n",
       "\n",
       "        Outlet_Type  \n",
       "0                 1  \n",
       "1                 1  \n",
       "2                 1  \n",
       "3                 1  \n",
       "4                 1  \n",
       "...             ...  \n",
       "252281            0  \n",
       "252282            1  \n",
       "252283            1  \n",
       "252284            1  \n",
       "252285            1  \n",
       "\n",
       "[252286 rows x 12 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebd3a39f",
   "metadata": {
    "papermill": {
     "duration": 0.015537,
     "end_time": "2024-07-01T20:51:19.105046",
     "exception": false,
     "start_time": "2024-07-01T20:51:19.089509",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Predicting and presenting results**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "69650be7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-01T20:51:19.138178Z",
     "iopub.status.busy": "2024-07-01T20:51:19.137808Z",
     "iopub.status.idle": "2024-07-01T20:51:30.205044Z",
     "shell.execute_reply": "2024-07-01T20:51:30.203950Z"
    },
    "papermill": {
     "duration": 11.087038,
     "end_time": "2024-07-01T20:51:30.207835",
     "exception": false,
     "start_time": "2024-07-01T20:51:19.120797",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "predictions = model.predict(test_data)\n",
    "\n",
    "submission = pd.DataFrame({'id': test_data['id'], 'Item_Outlet_Sales': predictions})\n",
    "submission.to_csv('submission.csv', index=False)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 8765512,
     "sourceId": 77807,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 338.943297,
   "end_time": "2024-07-01T20:51:31.047065",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-01T20:45:52.103768",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
